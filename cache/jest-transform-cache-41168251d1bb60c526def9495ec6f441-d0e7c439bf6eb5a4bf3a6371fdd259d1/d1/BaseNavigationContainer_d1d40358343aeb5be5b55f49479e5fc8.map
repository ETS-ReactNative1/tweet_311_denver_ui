{"version":3,"sources":["BaseNavigationContainer.tsx"],"names":["MISSING_CONTEXT_ERROR","NOT_INITIALIZED_ERROR","NavigationStateContext","isDefault","hasWarnedForSerialization","getPartialState","state","routeNames","stale","routes","route","BaseNavigationContainer","children","parent","React","initialState","navigationStateRef","transactionStateRef","isTransactionActiveRef","isFirstMountRef","skipTrackingRef","navigatorKeyRef","getKey","setKey","key","performTransaction","callback","setNavigationState","navigationState","getState","setState","reset","trackAction","name","addListener","addFocusedListener","addStateGetter","dispatch","action","listeners","navigation","canGoBack","handled","resetRoot","getRootState","getStateForRoute","emitter","Object","CommonActions","acc","builderContext","context","process","console","type","data","trackState","onStateChange"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport useFocusedListeners from './useFocusedListeners';\nimport useDevTools from './useDevTools';\nimport useStateGetters from './useStateGetters';\nimport isSerializable from './isSerializable';\n\nimport { NavigationContainerRef, NavigationContainerProps } from './types';\nimport useEventEmitter from './useEventEmitter';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst MISSING_CONTEXT_ERROR =\n  \"We couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/en/getting-started.html for setup instructions.\";\n\nconst NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. You can ensure that all navigators have mounted after the callback to 'useEffect' is called in your root component. See https://reactnavigation.org/docs/en/navigating-without-navigation-prop.html#handling-initialization for more details.\";\n\nexport const NavigationStateContext = React.createContext<{\n  isDefault?: true;\n  state?: NavigationState | PartialState<NavigationState>;\n  getKey: () => string | undefined;\n  setKey: (key: string) => void;\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\n  setState: (\n    state: NavigationState | PartialState<NavigationState> | undefined\n  ) => void;\n  performTransaction: (action: () => void) => void;\n}>({\n  isDefault: true,\n\n  get getKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get performTransaction(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\nlet hasWarnedForSerialization = false;\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  // @ts-ignore\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map(route => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [state, setNavigationState] = React.useState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const navigationStateRef = React.useRef<State>();\n    const transactionStateRef = React.useRef<State | null>(null);\n    const isTransactionActiveRef = React.useRef<boolean>(false);\n    const isFirstMountRef = React.useRef<boolean>(true);\n    const skipTrackingRef = React.useRef<boolean>(false);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const performTransaction = React.useCallback((callback: () => void) => {\n      if (isTransactionActiveRef.current) {\n        throw new Error(\n          \"Only one transaction can be active at a time. Did you accidentally nest 'performTransaction'?\"\n        );\n      }\n\n      setNavigationState((navigationState: State) => {\n        isTransactionActiveRef.current = true;\n        transactionStateRef.current = navigationState;\n\n        try {\n          callback();\n        } finally {\n          isTransactionActiveRef.current = false;\n        }\n\n        return transactionStateRef.current;\n      });\n    }, []);\n\n    const getState = React.useCallback(\n      () =>\n        transactionStateRef.current !== null\n          ? transactionStateRef.current\n          : navigationStateRef.current,\n      []\n    );\n\n    const setState = React.useCallback((navigationState: State) => {\n      if (transactionStateRef.current === null) {\n        throw new Error(\n          \"Any 'setState' calls need to be done inside 'performTransaction'\"\n        );\n      }\n\n      transactionStateRef.current = navigationState;\n    }, []);\n\n    const reset = React.useCallback(\n      (state: NavigationState) => {\n        performTransaction(() => {\n          skipTrackingRef.current = true;\n          setState(state);\n        });\n      },\n      [performTransaction, setState]\n    );\n\n    const { trackState, trackAction } = useDevTools({\n      name: '@react-navigation',\n      reset,\n      state,\n    });\n\n    const {\n      listeners,\n      addListener: addFocusedListener,\n    } = useFocusedListeners();\n\n    const { getStateForRoute, addStateGetter } = useStateGetters();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners[0] == null) {\n        throw new Error(NOT_INITIALIZED_ERROR);\n      }\n\n      listeners[0](navigation => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      if (listeners[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners[0](navigation =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        performTransaction(() => {\n          trackAction('@@RESET_ROOT');\n          setState(state);\n        });\n      },\n      [performTransaction, setState, trackAction]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return getStateForRoute('root');\n    }, [getStateForRoute]);\n\n    const emitter = useEventEmitter();\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-ignore\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n    }));\n\n    const builderContext = React.useMemo(\n      () => ({\n        addFocusedListener,\n        addStateGetter,\n        trackAction,\n      }),\n      [addFocusedListener, trackAction, addStateGetter]\n    );\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        performTransaction,\n        getState,\n        setState,\n        getKey,\n        setKey,\n      }),\n      [getKey, getState, performTransaction, setKey, setState, state]\n    );\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (\n          state !== undefined &&\n          !isSerializable(state) &&\n          !hasWarnedForSerialization\n        ) {\n          hasWarnedForSerialization = true;\n\n          console.warn(\n            \"We found non-serializable values in the navigation state, which can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/en/troubleshooting.html#i-get-the-warning-we-found-non-serializable-values-in-the-navigation-state for more details.\"\n          );\n        }\n      }\n\n      emitter.emit({\n        type: 'state',\n        data: { state },\n      });\n\n      if (skipTrackingRef.current) {\n        skipTrackingRef.current = false;\n      } else {\n        trackState(getRootState);\n      }\n\n      navigationStateRef.current = state;\n      transactionStateRef.current = null;\n\n      if (!isFirstMountRef.current && onStateChange) {\n        onStateChange(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [state, onStateChange, trackState, getRootState, emitter]);\n\n    return (\n      <NavigationBuilderContext.Provider value={builderContext}>\n        <NavigationStateContext.Provider value={context}>\n          <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n        </NavigationStateContext.Provider>\n      </NavigationBuilderContext.Provider>\n    );\n  }\n);\n\nexport default BaseNavigationContainer;\n"]}