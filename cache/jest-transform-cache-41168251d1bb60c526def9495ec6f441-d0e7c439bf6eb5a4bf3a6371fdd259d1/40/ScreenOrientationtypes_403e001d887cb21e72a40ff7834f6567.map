{"version":3,"sources":["../../src/ScreenOrientation/ScreenOrientation.types.ts"],"names":[],"mappings":";;;;AAAA,IAAY,WAAZ;;;AAAA,CAAA,UAAY,WAAZ,EAAuB;AACrB,EAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,WAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,WAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACA,EAAA,WAAA,CAAA,eAAA,CAAA,GAAA,eAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,gBAAA;AACA,EAAA,WAAA,CAAA,iBAAA,CAAA,GAAA,iBAAA;AACD,CARD,EAAY,WAAW,2BAAX,WAAW,GAAA,EAAA,CAAvB;;AAUA,IAAY,eAAZ;;;AAAA,CAAA,UAAY,eAAZ,EAA2B;AACzB,EAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,eAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,eAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACA,EAAA,eAAA,CAAA,eAAA,CAAA,GAAA,eAAA;AACA,EAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,gBAAA;AACA,EAAA,eAAA,CAAA,iBAAA,CAAA,GAAA,iBAAA;AACA,EAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,qBAAA;AACD,CAZD,EAAY,eAAe,+BAAf,eAAe,GAAA,EAAA,CAA3B;;AAcA,IAAY,YAAZ;;;AAAA,CAAA,UAAY,YAAZ,EAAwB;AACtB,EAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACD,CAJD,EAAY,YAAY,4BAAZ,YAAY,GAAA,EAAA,CAAxB;;AAMA,IAAY,kBAAZ;;;AAAA,CAAA,UAAY,kBAAZ,EAA8B;AAC5B,EAAA,kBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAA;AACA,EAAA,kBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAA;AACA,EAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,kBAAA,CAAA,mBAAA,CAAA,GAAA,mBAAA;AACA,EAAA,kBAAA,CAAA,qBAAA,CAAA,GAAA,qBAAA;AACA,EAAA,kBAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACD,CAVD,EAAY,kBAAkB,kCAAlB,kBAAkB,GAAA,EAAA,CAA9B;;AAYA,IAAY,cAAZ;;;AAAA,CAAA,UAAY,cAAZ,EAA0B;AACxB,EAAA,cAAA,CAAA,kBAAA,CAAA,GAAA,kBAAA;AACA,EAAA,cAAA,CAAA,oBAAA,CAAA,GAAA,oBAAA;AACA,EAAA,cAAA,CAAA,mBAAA,CAAA,GAAA,mBAAA;AACA,EAAA,cAAA,CAAA,qBAAA,CAAA,GAAA,qBAAA;AACD,CALD,EAAY,cAAc,8BAAd,cAAc,GAAA,EAAA,CAA1B","sourcesContent":["export enum Orientation {\n  UNKNOWN = 'UNKNOWN',\n  PORTRAIT = 'PORTRAIT',\n  PORTRAIT_UP = 'PORTRAIT_UP',\n  PORTRAIT_DOWN = 'PORTRAIT_DOWN',\n  LANDSCAPE = 'LANDSCAPE',\n  LANDSCAPE_LEFT = 'LANDSCAPE_LEFT',\n  LANDSCAPE_RIGHT = 'LANDSCAPE_RIGHT',\n}\n\nexport enum OrientationLock {\n  DEFAULT = 'DEFAULT',\n  ALL = 'ALL',\n  PORTRAIT = 'PORTRAIT',\n  PORTRAIT_UP = 'PORTRAIT_UP',\n  PORTRAIT_DOWN = 'PORTRAIT_DOWN',\n  LANDSCAPE = 'LANDSCAPE',\n  LANDSCAPE_LEFT = 'LANDSCAPE_LEFT',\n  LANDSCAPE_RIGHT = 'LANDSCAPE_RIGHT',\n  OTHER = 'OTHER',\n  UNKNOWN = 'UNKNOWN',\n  ALL_BUT_UPSIDE_DOWN = 'ALL_BUT_UPSIDE_DOWN', // deprecated\n}\n\nexport enum SizeClassIOS {\n  REGULAR = 'REGULAR',\n  COMPACT = 'COMPACT',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport enum WebOrientationLock {\n  PORTRAIT_PRIMARY = 'portrait-primary',\n  PORTRAIT_SECONDARY = 'portrait-secondary',\n  PORTRAIT = 'portrait',\n  LANDSCAPE_PRIMARY = 'landscape-primary',\n  LANDSCAPE_SECONDARY = 'landscape-secondary',\n  LANDSCAPE = 'landscape',\n  ANY = 'any',\n  NATURAL = 'natural',\n  UNKNOWN = 'unknown',\n}\n\nexport enum WebOrientation {\n  PORTRAIT_PRIMARY = 'portrait-primary',\n  PORTRAIT_SECONDARY = 'portrait-secondary',\n  LANDSCAPE_PRIMARY = 'landscape-primary',\n  LANDSCAPE_SECONDARY = 'landscape-secondary',\n}\n\nexport type OrientationInfo = {\n  orientation: Orientation;\n  verticalSizeClass?: SizeClassIOS;\n  horizontalSizeClass?: SizeClassIOS;\n};\n\nexport type PlatformOrientationInfo = {\n  screenOrientationConstantAndroid?: number;\n  screenOrientationArrayIOS?: Orientation[];\n  screenOrientationLockWeb?: WebOrientationLock;\n};\n\nexport type OrientationChangeListener = (event: OrientationChangeEvent) => void;\n\nexport type OrientationChangeEvent = {\n  orientationLock: OrientationLock;\n  orientationInfo: OrientationInfo;\n};\n"],"sourceRoot":""}