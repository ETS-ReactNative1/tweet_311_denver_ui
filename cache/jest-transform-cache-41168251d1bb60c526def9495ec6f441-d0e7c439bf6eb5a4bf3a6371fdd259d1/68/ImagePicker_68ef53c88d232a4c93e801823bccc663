f7aa1e10708761bc1965aa5bac354b2f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCameraPermissionsAsync = getCameraPermissionsAsync;
exports.getCameraRollPermissionsAsync = getCameraRollPermissionsAsync;
exports.requestCameraPermissionsAsync = requestCameraPermissionsAsync;
exports.requestCameraRollPermissionsAsync = requestCameraRollPermissionsAsync;
exports.launchImageLibraryAsync = launchImageLibraryAsync;
exports.launchCameraAsync = launchCameraAsync;
Object.defineProperty(exports, "MediaTypeOptions", {
  enumerable: true,
  get: function get() {
    return _ImagePicker.MediaTypeOptions;
  }
});
Object.defineProperty(exports, "VideoExportPreset", {
  enumerable: true,
  get: function get() {
    return _ImagePicker.VideoExportPreset;
  }
});

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _core = require("@unimodules/core");

var _ExponentImagePicker = _interopRequireDefault(require("./ExponentImagePicker"));

var _ImagePicker = require("./ImagePicker.types");

function getCameraPermissionsAsync() {
  return _regenerator.default.async(function getCameraPermissionsAsync$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", _ExponentImagePicker.default.getCameraPermissionsAsync());

        case 1:
        case "end":
          return _context.stop();
      }
    }
  });
}

function getCameraRollPermissionsAsync() {
  return _regenerator.default.async(function getCameraRollPermissionsAsync$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          return _context2.abrupt("return", _ExponentImagePicker.default.getCameraRollPermissionsAsync());

        case 1:
        case "end":
          return _context2.stop();
      }
    }
  });
}

function requestCameraPermissionsAsync() {
  return _regenerator.default.async(function requestCameraPermissionsAsync$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          return _context3.abrupt("return", _ExponentImagePicker.default.requestCameraPermissionsAsync());

        case 1:
        case "end":
          return _context3.stop();
      }
    }
  });
}

function requestCameraRollPermissionsAsync() {
  return _regenerator.default.async(function requestCameraRollPermissionsAsync$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          return _context4.abrupt("return", _ExponentImagePicker.default.requestCameraRollPermissionsAsync());

        case 1:
        case "end":
          return _context4.stop();
      }
    }
  });
}

function launchImageLibraryAsync() {
  var options,
      _args5 = arguments;
  return _regenerator.default.async(function launchImageLibraryAsync$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          options = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};

          if (_ExponentImagePicker.default.launchImageLibraryAsync) {
            _context5.next = 3;
            break;
          }

          throw new _core.UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');

        case 3:
          _context5.next = 5;
          return _regenerator.default.awrap(_ExponentImagePicker.default.launchImageLibraryAsync(options));

        case 5:
          return _context5.abrupt("return", _context5.sent);

        case 6:
        case "end":
          return _context5.stop();
      }
    }
  });
}

function launchCameraAsync() {
  var options,
      _args6 = arguments;
  return _regenerator.default.async(function launchCameraAsync$(_context6) {
    while (1) {
      switch (_context6.prev = _context6.next) {
        case 0:
          options = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};

          if (_ExponentImagePicker.default.launchCameraAsync) {
            _context6.next = 3;
            break;
          }

          throw new _core.UnavailabilityError('ImagePicker', 'launchCameraAsync');

        case 3:
          _context6.next = 5;
          return _regenerator.default.awrap(_ExponentImagePicker.default.launchCameraAsync(options));

        case 5:
          return _context6.abrupt("return", _context6.sent);

        case 6:
        case "end":
          return _context6.stop();
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9JbWFnZVBpY2tlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQVFPLFNBQWUseUJBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDJDQUNFLDZCQUFvQix5QkFBcEIsRUFERjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFJQSxTQUFlLDZCQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw0Q0FDRSw2QkFBb0IsNkJBQXBCLEVBREY7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBSUEsU0FBZSw2QkFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsNENBQ0UsNkJBQW9CLDZCQUFwQixFQURGOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUlBLFNBQWUsaUNBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDRDQUNFLDZCQUFvQixpQ0FBcEIsRUFERjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFJQSxTQUFlLHVCQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0wsVUFBQSxPQURLLDhEQUN5QixFQUR6Qjs7QUFBQSxjQUdBLDZCQUFvQix1QkFIcEI7QUFBQTtBQUFBO0FBQUE7O0FBQUEsZ0JBSUcsSUFBSSx5QkFBSixDQUF3QixhQUF4QixFQUF1Qyx5QkFBdkMsQ0FKSDs7QUFBQTtBQUFBO0FBQUEsNENBTVEsNkJBQW9CLHVCQUFwQixDQUE0QyxPQUE1QyxDQU5SOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBU0EsU0FBZSxpQkFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNMLFVBQUEsT0FESyw4REFDeUIsRUFEekI7O0FBQUEsY0FHQSw2QkFBb0IsaUJBSHBCO0FBQUE7QUFBQTtBQUFBOztBQUFBLGdCQUlHLElBQUkseUJBQUosQ0FBd0IsYUFBeEIsRUFBdUMsbUJBQXZDLENBSkg7O0FBQUE7QUFBQTtBQUFBLDRDQU1RLDZCQUFvQixpQkFBcEIsQ0FBc0MsT0FBdEMsQ0FOUjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVW5hdmFpbGFiaWxpdHlFcnJvciB9IGZyb20gJ0B1bmltb2R1bGVzL2NvcmUnO1xuXG5pbXBvcnQgRXhwb25lbnRJbWFnZVBpY2tlciBmcm9tICcuL0V4cG9uZW50SW1hZ2VQaWNrZXInO1xuaW1wb3J0IHtcbiAgSW1hZ2VQaWNrZXJSZXN1bHQsXG4gIE1lZGlhVHlwZU9wdGlvbnMsXG4gIEltYWdlUGlja2VyT3B0aW9ucyxcbiAgUGVybWlzc2lvblJlc3BvbnNlLFxuICBWaWRlb0V4cG9ydFByZXNldCxcbn0gZnJvbSAnLi9JbWFnZVBpY2tlci50eXBlcyc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDYW1lcmFQZXJtaXNzaW9uc0FzeW5jKCk6IFByb21pc2U8UGVybWlzc2lvblJlc3BvbnNlPiB7XG4gIHJldHVybiBFeHBvbmVudEltYWdlUGlja2VyLmdldENhbWVyYVBlcm1pc3Npb25zQXN5bmMoKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldENhbWVyYVJvbGxQZXJtaXNzaW9uc0FzeW5jKCk6IFByb21pc2U8UGVybWlzc2lvblJlc3BvbnNlPiB7XG4gIHJldHVybiBFeHBvbmVudEltYWdlUGlja2VyLmdldENhbWVyYVJvbGxQZXJtaXNzaW9uc0FzeW5jKCk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZXF1ZXN0Q2FtZXJhUGVybWlzc2lvbnNBc3luYygpOiBQcm9taXNlPFBlcm1pc3Npb25SZXNwb25zZT4ge1xuICByZXR1cm4gRXhwb25lbnRJbWFnZVBpY2tlci5yZXF1ZXN0Q2FtZXJhUGVybWlzc2lvbnNBc3luYygpO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVxdWVzdENhbWVyYVJvbGxQZXJtaXNzaW9uc0FzeW5jKCk6IFByb21pc2U8UGVybWlzc2lvblJlc3BvbnNlPiB7XG4gIHJldHVybiBFeHBvbmVudEltYWdlUGlja2VyLnJlcXVlc3RDYW1lcmFSb2xsUGVybWlzc2lvbnNBc3luYygpO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbGF1bmNoSW1hZ2VMaWJyYXJ5QXN5bmMoXG4gIG9wdGlvbnM6IEltYWdlUGlja2VyT3B0aW9ucyA9IHt9XG4pOiBQcm9taXNlPEltYWdlUGlja2VyUmVzdWx0PiB7XG4gIGlmICghRXhwb25lbnRJbWFnZVBpY2tlci5sYXVuY2hJbWFnZUxpYnJhcnlBc3luYykge1xuICAgIHRocm93IG5ldyBVbmF2YWlsYWJpbGl0eUVycm9yKCdJbWFnZVBpY2tlcicsICdsYXVuY2hJbWFnZUxpYnJhcnlBc3luYycpO1xuICB9XG4gIHJldHVybiBhd2FpdCBFeHBvbmVudEltYWdlUGlja2VyLmxhdW5jaEltYWdlTGlicmFyeUFzeW5jKG9wdGlvbnMpO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbGF1bmNoQ2FtZXJhQXN5bmMoXG4gIG9wdGlvbnM6IEltYWdlUGlja2VyT3B0aW9ucyA9IHt9XG4pOiBQcm9taXNlPEltYWdlUGlja2VyUmVzdWx0PiB7XG4gIGlmICghRXhwb25lbnRJbWFnZVBpY2tlci5sYXVuY2hDYW1lcmFBc3luYykge1xuICAgIHRocm93IG5ldyBVbmF2YWlsYWJpbGl0eUVycm9yKCdJbWFnZVBpY2tlcicsICdsYXVuY2hDYW1lcmFBc3luYycpO1xuICB9XG4gIHJldHVybiBhd2FpdCBFeHBvbmVudEltYWdlUGlja2VyLmxhdW5jaENhbWVyYUFzeW5jKG9wdGlvbnMpO1xufVxuXG5leHBvcnQgeyBNZWRpYVR5cGVPcHRpb25zLCBJbWFnZVBpY2tlck9wdGlvbnMsIEltYWdlUGlja2VyUmVzdWx0LCBWaWRlb0V4cG9ydFByZXNldCB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==