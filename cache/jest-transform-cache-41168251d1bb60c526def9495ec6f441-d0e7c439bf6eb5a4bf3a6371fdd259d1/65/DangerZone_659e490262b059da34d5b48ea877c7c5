062e22c75a552d0e8150f1185e5b3cb6
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _removedModule = _interopRequireDefault(require("./removedModule"));

Object.defineProperties(module.exports, {
  Lottie: {
    enumerable: true,
    get: function get() {
      (0, _removedModule.default)("DangerZone.Lottie -> import Lottie from 'lottie-react-native'", 'DangerZone.Lottie', 'lottie-react-native');
    }
  },
  Branch: {
    enumerable: true,
    get: function get() {
      (0, _removedModule.default)("DangerZone.Branch -> import Branch, { BranchEvent } from 'react-native-branch'", 'DangerZone.Branch', 'react-native-branch');
    }
  },
  Stripe: {
    enumerable: true,
    get: function get() {
      (0, _removedModule.default)("DangerZone.Stripe -> import { PaymentsStripe } from 'expo-payments-stripe'", 'DangerZone.Stripe', 'expo-payments-stripe');
    }
  },
  DeviceMotion: {
    enumerable: true,
    get: function get() {
      (0, _removedModule.default)("DangerZone.DeviceMotion -> import { DeviceMotion } from 'expo-sensors'", 'DangerZone.DeviceMotion', 'expo-sensors');
    }
  },
  Animated: {
    enumerable: true,
    get: function get() {
      (0, _removedModule.default)("DangerZone.Animated -> import Animated from 'react-native-reanimated'", 'DangerZone.Animated', 'react-native-reanimated');
    }
  },
  Easing: {
    enumerable: true,
    get: function get() {
      (0, _removedModule.default)("DangerZone.Easing -> import { Easing } from 'react-native-reanimated'", 'DangerZone.Easing', 'react-native-reanimated');
    }
  },
  Screen: {
    enumerable: true,
    get: function get() {
      (0, _removedModule.default)("DangerZone.Screen -> import { Screen } from 'react-native-screens'", 'DangerZone.Screen', 'react-native-screens');
    }
  },
  ScreenContainer: {
    enumerable: true,
    get: function get() {
      (0, _removedModule.default)("DangerZone.ScreenContainer -> import { ScreenContainer } from 'react-native-screens'", 'DangerZone.ScreenContainer', 'react-native-screens');
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9EYW5nZXJab25lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBSUE7O0FBS0EsTUFBTSxDQUFDLGdCQUFQLENBQXdCLE1BQU0sQ0FBQyxPQUEvQixFQUF3QztBQUN0QyxFQUFBLE1BQU0sRUFBRTtBQUNOLElBQUEsVUFBVSxFQUFFLElBRE47QUFFTixJQUFBLEdBRk0saUJBRUg7QUFDRCxtR0FFRSxtQkFGRixFQUdFLHFCQUhGO0FBS0Q7QUFSSyxHQUQ4QjtBQVd0QyxFQUFBLE1BQU0sRUFBRTtBQUNOLElBQUEsVUFBVSxFQUFFLElBRE47QUFFTixJQUFBLEdBRk0saUJBRUg7QUFDRCxvSEFFRSxtQkFGRixFQUdFLHFCQUhGO0FBS0Q7QUFSSyxHQVg4QjtBQXFCdEMsRUFBQSxNQUFNLEVBQUU7QUFDTixJQUFBLFVBQVUsRUFBRSxJQUROO0FBRU4sSUFBQSxHQUZNLGlCQUVIO0FBQ0QsZ0hBRUUsbUJBRkYsRUFHRSxzQkFIRjtBQUtEO0FBUkssR0FyQjhCO0FBK0J0QyxFQUFBLFlBQVksRUFBRTtBQUNaLElBQUEsVUFBVSxFQUFFLElBREE7QUFFWixJQUFBLEdBRlksaUJBRVQ7QUFDRCw0R0FFRSx5QkFGRixFQUdFLGNBSEY7QUFLRDtBQVJXLEdBL0J3QjtBQTBDdEMsRUFBQSxRQUFRLEVBQUU7QUFDUixJQUFBLFVBQVUsRUFBRSxJQURKO0FBRVIsSUFBQSxHQUZRLGlCQUVMO0FBQ0QsMkdBRUUscUJBRkYsRUFHRSx5QkFIRjtBQUtEO0FBUk8sR0ExQzRCO0FBb0R0QyxFQUFBLE1BQU0sRUFBRTtBQUNOLElBQUEsVUFBVSxFQUFFLElBRE47QUFFTixJQUFBLEdBRk0saUJBRUg7QUFDRCwyR0FFRSxtQkFGRixFQUdFLHlCQUhGO0FBS0Q7QUFSSyxHQXBEOEI7QUFnRXRDLEVBQUEsTUFBTSxFQUFFO0FBQ04sSUFBQSxVQUFVLEVBQUUsSUFETjtBQUVOLElBQUEsR0FGTSxpQkFFSDtBQUNELHdHQUVFLG1CQUZGLEVBR0Usc0JBSEY7QUFLRDtBQVJLLEdBaEU4QjtBQTBFdEMsRUFBQSxlQUFlLEVBQUU7QUFDZixJQUFBLFVBQVUsRUFBRSxJQURHO0FBRWYsSUFBQSxHQUZlLGlCQUVaO0FBQ0QsMEhBRUUsNEJBRkYsRUFHRSxzQkFIRjtBQUtEO0FBUmM7QUExRXFCLENBQXhDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNb2R1bGVzIGV4cG9ydGVkIGhlcmUgYXJlIGV4cGVyaW1lbnRhbCBhbmQgQ09VTEQgYnJlYWsgaW4gdGhlIGZ1dHVyZS4gTWFrZSBzdXJlIHlvdSBrZWVwIHlvdXIgYXBwXG4gKiB1cCB0byBkYXRlIGlmIHlvdSBwbGFuIHRvIHVzZSBhbnkgb2YgdGhlc2UuXG4gKi9cbmltcG9ydCByZW1vdmVkTW9kdWxlIGZyb20gJy4vcmVtb3ZlZE1vZHVsZSc7XG5cbmRlY2xhcmUgdmFyIG1vZHVsZTogYW55O1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBnZXR0ZXItcmV0dXJuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhtb2R1bGUuZXhwb3J0cywge1xuICBMb3R0aWU6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldCgpIHtcbiAgICAgIHJlbW92ZWRNb2R1bGUoXG4gICAgICAgIGBEYW5nZXJab25lLkxvdHRpZSAtPiBpbXBvcnQgTG90dGllIGZyb20gJ2xvdHRpZS1yZWFjdC1uYXRpdmUnYCxcbiAgICAgICAgJ0RhbmdlclpvbmUuTG90dGllJyxcbiAgICAgICAgJ2xvdHRpZS1yZWFjdC1uYXRpdmUnXG4gICAgICApO1xuICAgIH0sXG4gIH0sXG4gIEJyYW5jaDoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0KCkge1xuICAgICAgcmVtb3ZlZE1vZHVsZShcbiAgICAgICAgYERhbmdlclpvbmUuQnJhbmNoIC0+IGltcG9ydCBCcmFuY2gsIHsgQnJhbmNoRXZlbnQgfSBmcm9tICdyZWFjdC1uYXRpdmUtYnJhbmNoJ2AsXG4gICAgICAgICdEYW5nZXJab25lLkJyYW5jaCcsXG4gICAgICAgICdyZWFjdC1uYXRpdmUtYnJhbmNoJ1xuICAgICAgKTtcbiAgICB9LFxuICB9LFxuICBTdHJpcGU6IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldCgpIHtcbiAgICAgIHJlbW92ZWRNb2R1bGUoXG4gICAgICAgIGBEYW5nZXJab25lLlN0cmlwZSAtPiBpbXBvcnQgeyBQYXltZW50c1N0cmlwZSB9IGZyb20gJ2V4cG8tcGF5bWVudHMtc3RyaXBlJ2AsXG4gICAgICAgICdEYW5nZXJab25lLlN0cmlwZScsXG4gICAgICAgICdleHBvLXBheW1lbnRzLXN0cmlwZSdcbiAgICAgICk7XG4gICAgfSxcbiAgfSxcbiAgRGV2aWNlTW90aW9uOiB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQoKSB7XG4gICAgICByZW1vdmVkTW9kdWxlKFxuICAgICAgICBgRGFuZ2VyWm9uZS5EZXZpY2VNb3Rpb24gLT4gaW1wb3J0IHsgRGV2aWNlTW90aW9uIH0gZnJvbSAnZXhwby1zZW5zb3JzJ2AsXG4gICAgICAgICdEYW5nZXJab25lLkRldmljZU1vdGlvbicsXG4gICAgICAgICdleHBvLXNlbnNvcnMnXG4gICAgICApO1xuICAgIH0sXG4gIH0sXG4gIC8vIHJlYWN0LW5hdGl2ZS1yZWFuaW1hdGVkXG4gIEFuaW1hdGVkOiB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQoKSB7XG4gICAgICByZW1vdmVkTW9kdWxlKFxuICAgICAgICBgRGFuZ2VyWm9uZS5BbmltYXRlZCAtPiBpbXBvcnQgQW5pbWF0ZWQgZnJvbSAncmVhY3QtbmF0aXZlLXJlYW5pbWF0ZWQnYCxcbiAgICAgICAgJ0RhbmdlclpvbmUuQW5pbWF0ZWQnLFxuICAgICAgICAncmVhY3QtbmF0aXZlLXJlYW5pbWF0ZWQnXG4gICAgICApO1xuICAgIH0sXG4gIH0sXG4gIEVhc2luZzoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0KCkge1xuICAgICAgcmVtb3ZlZE1vZHVsZShcbiAgICAgICAgYERhbmdlclpvbmUuRWFzaW5nIC0+IGltcG9ydCB7IEVhc2luZyB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1yZWFuaW1hdGVkJ2AsXG4gICAgICAgICdEYW5nZXJab25lLkVhc2luZycsXG4gICAgICAgICdyZWFjdC1uYXRpdmUtcmVhbmltYXRlZCdcbiAgICAgICk7XG4gICAgfSxcbiAgfSxcblxuICAvLyByZWFjdC1uYXRpdmUtc2NyZWVuc1xuICBTY3JlZW46IHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldCgpIHtcbiAgICAgIHJlbW92ZWRNb2R1bGUoXG4gICAgICAgIGBEYW5nZXJab25lLlNjcmVlbiAtPiBpbXBvcnQgeyBTY3JlZW4gfSBmcm9tICdyZWFjdC1uYXRpdmUtc2NyZWVucydgLFxuICAgICAgICAnRGFuZ2VyWm9uZS5TY3JlZW4nLFxuICAgICAgICAncmVhY3QtbmF0aXZlLXNjcmVlbnMnXG4gICAgICApO1xuICAgIH0sXG4gIH0sXG4gIFNjcmVlbkNvbnRhaW5lcjoge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0KCkge1xuICAgICAgcmVtb3ZlZE1vZHVsZShcbiAgICAgICAgYERhbmdlclpvbmUuU2NyZWVuQ29udGFpbmVyIC0+IGltcG9ydCB7IFNjcmVlbkNvbnRhaW5lciB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1zY3JlZW5zJ2AsXG4gICAgICAgICdEYW5nZXJab25lLlNjcmVlbkNvbnRhaW5lcicsXG4gICAgICAgICdyZWFjdC1uYXRpdmUtc2NyZWVucydcbiAgICAgICk7XG4gICAgfSxcbiAgfSxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==