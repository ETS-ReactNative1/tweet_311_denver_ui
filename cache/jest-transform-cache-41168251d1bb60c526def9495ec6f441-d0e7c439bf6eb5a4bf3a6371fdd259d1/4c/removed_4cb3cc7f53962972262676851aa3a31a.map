{"version":3,"sources":["../src/removed.ts"],"names":[],"mappings":"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","sourcesContent":["// Importing these modules from the 'expo' package was deprecated in SDK 33.\n// Please import them from the each individual unimodule package instead.\n\nimport removedModule from './removedModule';\n\ndeclare var module: any;\n\n/* eslint-disable getter-return */\nObject.defineProperties(module.exports, {\n  AdMobBanner: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { AdMobBanner } from 'expo' -> import { AdMobBanner } from 'expo-ads-admob'`,\n        'AdMobBanner',\n        'expo-ads-admob'\n      );\n    },\n  },\n  AdMobInterstitial: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { AdMobInterstitial } from 'expo' -> import { AdMobInterstitial } from 'expo-ads-admob'`,\n        'AdMobInterstitial',\n        'expo-ads-admob'\n      );\n    },\n  },\n  AdMobRewarded: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { AdMobRewarded } from 'expo' -> import { AdMobRewarded } from 'expo-ads-admob'`,\n        'AdMobRewarded',\n        'expo-ads-admob'\n      );\n    },\n  },\n  Animated: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Animated } from 'expo' -> import Animated from 'react-native-reanimated'`,\n        'Animated',\n        'react-native-reanimated'\n      );\n    },\n  },\n  Easing: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Easing } from 'expo' -> import { Easing } from 'react-native-reanimated'`,\n        'Easing',\n        'react-native-reanimated'\n      );\n    },\n  },\n  Transition: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Transition } from 'expo' -> import { Transition } from 'react-native-reanimated'`,\n        'Transition',\n        'react-native-reanimated'\n      );\n    },\n  },\n  Transitioning: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Transitioning } from 'expo' -> import { Transitioning } from 'react-native-reanimated'`,\n        'Transitioning',\n        'react-native-reanimated'\n      );\n    },\n  },\n  PublisherBanner: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { PublisherBanner } from 'expo' -> import { PublisherBanner } from 'expo-ads-admob'`,\n        'PublisherBanner',\n        'expo-ads-admob'\n      );\n    },\n  },\n\n  FacebookAds: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { FacebookAds } from 'expo' -> import * as FacebookAds from 'expo-ads-facebook'`,\n        'FacebookAds',\n        'expo-ads-facebook'\n      );\n    },\n  },\n\n  Amplitude: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Amplitude } from 'expo' -> import * as Amplitude from 'expo-analytics-amplitude'`,\n        'Amplitude',\n        'expo-analytics-amplitude'\n      );\n    },\n  },\n\n  Segment: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Segment } from 'expo' -> import * as Segment from 'expo-analytics-segment'`,\n        'Segment',\n        'expo-analytics-segment'\n      );\n    },\n  },\n\n  AppAuth: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { AppAuth } from 'expo' -> import * as AppAuth from 'expo-app-auth'`,\n        'AppAuth',\n        'expo-app-auth'\n      );\n    },\n  },\n\n  Asset: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Asset } from 'expo' -> import { Asset } from 'expo-asset'`,\n        'Asset',\n        'expo-asset'\n      );\n    },\n  },\n\n  Audio: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Audio } from 'expo' -> import { Audio } from 'expo-av'`,\n        'Audio',\n        'expo-av'\n      );\n    },\n  },\n  Video: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Video } from 'expo' -> import { Video } from 'expo-av'`,\n        'Video',\n        'expo-av'\n      );\n    },\n  },\n\n  BackgroundFetch: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { BackgroundFetch } from 'expo' -> import * as BackgroundFetch from 'expo-background-fetch'`,\n        'BackgroundFetch',\n        'expo-background-fetch'\n      );\n    },\n  },\n\n  BarCodeScanner: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { BarCodeScanner } from 'expo' -> import { BarCodeScanner } from 'expo-barcode-scanner'`,\n        'BarCodeScanner',\n        'expo-barcode-scanner'\n      );\n    },\n  },\n\n  BlurView: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { BlurView } from 'expo' -> import { BlurView } from 'expo-blur'`,\n        'BlurView',\n        'expo-blur'\n      );\n    },\n  },\n\n  Brightness: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Brightness } from 'expo' -> import * as Brightness from 'expo-brightness'`,\n        'Brightness',\n        'expo-brightness'\n      );\n    },\n  },\n\n  Calendar: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Calendar } from 'expo' -> import * as Calendar from 'expo-calendar'`,\n        'Calendar',\n        'expo-calendar'\n      );\n    },\n  },\n\n  Camera: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Camera } from 'expo' -> import { Camera } from 'expo-camera'`,\n        'Camera',\n        'expo-camera'\n      );\n    },\n  },\n\n  Constants: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Constants } from 'expo' -> import Constants from 'expo-constants'`,\n        'Constants',\n        'expo-constants'\n      );\n    },\n  },\n\n  Contacts: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Contacts } from 'expo' -> import * as Contacts from 'expo-contacts'`,\n        'Contacts',\n        'expo-contacts'\n      );\n    },\n  },\n\n  Crypto: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Crypto } from 'expo' -> import * as Crypto from 'expo-crypto'`,\n        'Crypto',\n        'expo-crypto'\n      );\n    },\n  },\n\n  DocumentPicker: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { DocumentPicker } from 'expo' -> import * as DocumentPicker from 'expo-document-picker'`,\n        'DocumentPicker',\n        'expo-document-picker'\n      );\n    },\n  },\n\n  ErrorRecovery: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { ErrorRecovery } from 'expo' -> import * as ErrorRecovery from 'expo-error-recovery'`,\n        'ErrorRecovery',\n        'expo-error-recovery'\n      );\n    },\n  },\n\n  FaceDetector: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { FaceDetector } from 'expo' -> import * as FaceDetector from 'expo-face-detector'`,\n        'FaceDetector',\n        'expo-face-detector'\n      );\n    },\n  },\n\n  Facebook: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Facebook } from 'expo' -> import * as Facebook from 'expo-facebook'`,\n        'Facebook',\n        'expo-facebook'\n      );\n    },\n  },\n\n  FileSystem: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { FileSystem } from 'expo' -> import * as FileSystem from 'expo-file-system'`,\n        'FileSystem',\n        'expo-file-system'\n      );\n    },\n  },\n\n  Font: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Font } from 'expo' -> import * as Font from 'expo-font'`,\n        'Font',\n        'expo-font'\n      );\n    },\n  },\n\n  GL: {\n    enumerable: true,\n    get() {\n      removedModule(`import { GL } from 'expo' -> import * as GL from 'expo-gl'`, 'GL', 'expo-gl');\n    },\n  },\n\n  GLView: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { GLView } from 'expo' -> import { GLView } from 'expo-gl'`,\n        'GLView',\n        'expo-gl'\n      );\n    },\n  },\n\n  GoogleSignIn: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { GoogleSignIn } from 'expo' -> import * as GoogleSignIn from 'expo-google-sign-in'`,\n        'GoogleSignIn',\n        'expo-google-sign-in'\n      );\n    },\n  },\n\n  Google: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Google } from 'expo' -> import * as Google from 'expo-google-app-auth'`,\n        'Google',\n        'expo-google-app-auth'\n      );\n    },\n  },\n\n  Haptic: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Haptic } from 'expo' -> import * as Haptic from 'expo-haptics'`,\n        'Haptic',\n        'expo-haptics'\n      );\n    },\n  },\n  Haptics: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Haptics } from 'expo' -> import * as Haptics from 'expo-haptics'`,\n        'Haptics',\n        'expo-haptics'\n      );\n    },\n  },\n\n  ImageManipulator: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { ImageManipulator } from 'expo' -> import * as ImageManipulator from 'expo-image-manipulator'`,\n        'ImageManipulator',\n        'expo-image-manipulator'\n      );\n    },\n  },\n\n  ImagePicker: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { ImagePicker } from 'expo' -> import * as ImagePicker from 'expo-image-picker'`,\n        'ImagePicker',\n        'expo-image-picker'\n      );\n    },\n  },\n\n  IntentLauncher: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { IntentLauncher } from 'expo' -> import * as IntentLauncher from 'expo-intent-launcher'`,\n        'IntentLauncher',\n        'expo-intent-launcher'\n      );\n    },\n  },\n  IntentLauncherAndroid: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { IntentLauncherAndroid } from 'expo' -> import * as IntentLauncherAndroid from 'expo-intent-launcher'`,\n        'IntentLauncherAndroid',\n        'expo-intent-launcher'\n      );\n    },\n  },\n\n  KeepAwake: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { KeepAwake } from 'expo' -> import KeepAwake from 'expo-keep-awake'`,\n        'KeepAwake',\n        'expo-keep-awake'\n      );\n    },\n  },\n\n  LinearGradient: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { LinearGradient } from 'expo' -> import { LinearGradient } from 'expo-linear-gradient'`,\n        'LinearGradient',\n        'expo-linear-gradient'\n      );\n    },\n  },\n\n  LocalAuthentication: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { LocalAuthentication } from 'expo' -> import * as LocalAuthentication from 'expo-local-authentication'`,\n        'LocalAuthentication',\n        'expo-local-authentication'\n      );\n    },\n  },\n\n  Localization: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Localization } from 'expo' -> import * as Localization from 'expo-localization'`,\n        'Localization',\n        'expo-localization'\n      );\n    },\n  },\n\n  Location: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Location } from 'expo' -> import * as Location from 'expo-location'`,\n        'Location',\n        'expo-location'\n      );\n    },\n  },\n\n  MailComposer: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { MailComposer } from 'expo' -> import * as MailComposer from 'expo-mail-composer'`,\n        'MailComposer',\n        'expo-mail-composer'\n      );\n    },\n  },\n\n  MediaLibrary: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { MediaLibrary } from 'expo' -> import * as MediaLibrary from 'expo-media-library'`,\n        'MediaLibrary',\n        'expo-media-library'\n      );\n    },\n  },\n\n  Permissions: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Permissions } from 'expo' -> import * as Permissions from 'expo-permissions'`,\n        'Permissions',\n        'expo-permissions'\n      );\n    },\n  },\n\n  Print: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Print } from 'expo' -> import * as Print from 'expo-print'`,\n        'Print',\n        'expo-print'\n      );\n    },\n  },\n\n  Random: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Random } from 'expo' -> import * as Random from 'expo-random'`,\n        'Random',\n        'expo-random'\n      );\n    },\n  },\n\n  SecureStore: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { SecureStore } from 'expo' -> import * as SecureStore from 'expo-secure-store'`,\n        'SecureStore',\n        'expo-secure-store'\n      );\n    },\n  },\n\n  Accelerometer: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Accelerometer } from 'expo' -> import { Accelerometer } from 'expo-sensors'`,\n        'Accelerometer',\n        'expo-sensors'\n      );\n    },\n  },\n  Barometer: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Barometer } from 'expo' -> import { Barometer } from 'expo-sensors'`,\n        'Barometer',\n        'expo-sensors'\n      );\n    },\n  },\n  Gyroscope: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Gyroscope } from 'expo' -> import { Gyroscope } from 'expo-sensors'`,\n        'Gyroscope',\n        'expo-sensors'\n      );\n    },\n  },\n  Magnetometer: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Magnetometer } from 'expo' -> import { Magnetometer } from 'expo-sensors'`,\n        'Magnetometer',\n        'expo-sensors'\n      );\n    },\n  },\n  MagnetometerUncalibrated: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { MagnetometerUncalibrated } from 'expo' -> import { MagnetometerUncalibrated } from 'expo-sensors'`,\n        'MagnetometerUncalibrated',\n        'expo-sensors'\n      );\n    },\n  },\n  Sensors: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Sensors } from 'expo' -> import * as Sensors from 'expo-sensors'`,\n        'Sensors',\n        'expo-sensors'\n      );\n    },\n  },\n\n  Sharing: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Sharing } from 'expo' -> import * as Sharing from 'expo-sharing'`,\n        'Sharing',\n        'expo-sharing'\n      );\n    },\n  },\n\n  SMS: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { SMS } from 'expo' -> import * as SMS from 'expo-sms'`,\n        'SMS',\n        'expo-sms'\n      );\n    },\n  },\n\n  Speech: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Speech } from 'expo' -> import * as Speech from 'expo-speech'`,\n        'Speech',\n        'expo-speech'\n      );\n    },\n  },\n\n  SQLite: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { SQLite } from 'expo' -> import { SQLite } from 'expo-sqlite'`,\n        'SQLite',\n        'expo-sqlite'\n      );\n    },\n  },\n\n  StoreReview: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { StoreReview } from 'expo' -> import { StoreReview } from 'expo-store-review'`,\n        'StoreReview',\n        'expo-store-review'\n      );\n    },\n  },\n\n  TaskManager: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { TaskManager } from 'expo' -> import * as TaskManager from 'expo-task-manager'`,\n        'TaskManager',\n        'expo-task-manager'\n      );\n    },\n  },\n\n  WebBrowser: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { WebBrowser } from 'expo' -> import * as WebBrowser from 'expo-web-browser'`,\n        'WebBrowser',\n        'expo-web-browser'\n      );\n    },\n  },\n\n  // Vendored native modules\n\n  GestureHandler: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { GestureHandler } from 'expo' -> import * as GestureHandler from 'react-native-gesture-handler'`,\n        'GestureHandler',\n        'react-native-gesture-handler'\n      );\n    },\n  },\n\n  Icon: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Icon } from 'expo' -> import * as Icon from '@expo/vector-icons'`,\n        'Icon',\n        '@expo/vector-icons'\n      );\n    },\n  },\n\n  MapView: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { MapView } from 'expo' -> import MapView from 'react-native-maps'`,\n        'MapView',\n        'react-native-maps'\n      );\n    },\n  },\n\n  Svg: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { Svg } from 'expo' -> import * as Svg from 'react-native-svg'`,\n        'Svg',\n        'react-native-svg'\n      );\n    },\n  },\n\n  takeSnapshotAsync: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { takeSnapshotAsync } from 'expo' -> import { captureRef as takeSnapshotAsync } from 'react-native-view-shot'`,\n        'takeSnapshotAsync',\n        'react-native-view-shot'\n      );\n    },\n  },\n\n  WebView: {\n    enumerable: true,\n    get() {\n      removedModule(\n        `import { WebView } from 'expo' -> import { WebView } from 'react-native-webview'`,\n        'WebView',\n        'react-native-webview'\n      );\n    },\n  },\n});\n"],"sourceRoot":""}