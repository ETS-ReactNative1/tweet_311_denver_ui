{"version":3,"sources":["BaseRouter.tsx"],"names":["BaseRouter","getStateForAction","action","index","state","r","routes","params","shouldActionChangeFocus"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,iBADiB,6BACA,KADA,EACA,MADA,EAIqB;AACpC,YAAQC,MAAM,CAAd,IAAA;AACE,WAAA,YAAA;AAAmB;AACjB,cAAMC,KAAK,GAAGD,MAAM,CAANA,MAAAA,GACVE,KAAK,CAALA,MAAAA,CAAAA,SAAAA,CAAuBC,UAAAA,CAAC;AAAA,mBAAIA,CAAC,CAADA,GAAAA,KAAUH,MAAM,CADlCA,MACc;AAAA,WAAxBE,CADUF,GAEVE,KAAK,CAFT,KAAA;;AAIA,cAAID,KAAK,KAAK,CAAd,CAAA,EAAkB;AAChB,mBAAA,IAAA;AACD;;AAED,iBAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEEG,YAAAA,MAAM,EAAE,KAAK,CAAL,MAAA,CAAA,GAAA,CAAiB,UAAA,CAAA,EAAA,CAAA;AAAA,qBACvB,CAAC,KAAD,KAAA,GAAA,aAAA,CAAA,EAAA,EAAA,CAAA,EAAA;AACYC,gBAAAA,MAAM,EAAA,aAAA,CAAA,EAAA,EAAOF,CAAC,CAAR,MAAA,EAAA,EAAA,EAAoBH,MAAM,CAANA,OAAAA,CAApB,MAAA;AADlB,eAAA,CAAA,GADM,CAAiB;AAAA,aAAjB;AAFV,WAAA,CAAA;AAQD;;AAED,WAAA,OAAA;AACE,eAAOA,MAAM,CAAb,OAAA;;AAEF;AACE,eAAA,IAAA;AAxBJ;AALe,GAAA;AAiCjBM,EAAAA,uBAjCiB,mCAiCM,MAjCN,EAiCuC;AACtD,WAAON,MAAM,CAANA,IAAAA,KAAP,UAAA;AACD;AAnCgB,CAAnB;eAsCeF,U","sourcesContent":["import { CommonNavigationAction, NavigationState, PartialState } from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex(r => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET':\n        return action.payload as PartialState<State>;\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n"]}