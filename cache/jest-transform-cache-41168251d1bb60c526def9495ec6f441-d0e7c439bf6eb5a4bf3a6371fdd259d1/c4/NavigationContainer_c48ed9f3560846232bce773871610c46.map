{"version":3,"sources":["NavigationContainer.tsx"],"names":["NavigationContainer","theme","DefaultTheme","rest","refContainer","React"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAKA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,2BAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,0BAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,IAAMA,mBAAmB,GAAG,KAAK,CAAL,UAAA,CAAiB,SAAA,mBAAA,CAAA,IAAA,EAAA,GAAA,EAG3C;AAAA,mBAAA,IAAA,CAFEC,KAEF;AAAA,MAFEA,KAEF,2BAFUC,aAAAA,CAAAA,OAEV;AAAA,MAF2BC,IAE3B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AACA,MAAMC,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAArB,IAAqBA,CAArB;AAEA,GAAA,GAAA,cAAA,CAAA,OAAA,EAAA,YAAA;AAEAA,EAAAA,KAAK,CAALA,mBAAAA,CAAAA,GAAAA,EAA+B;AAAA,WAAMD,YAAY,CAAjDC,OAA+B;AAAA,GAA/BA;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,cAAA,CAAD,OAAA,EAAA;AAAe,IAAA,KAAK,EAAEJ;AAAtB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,uBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAmC,IAAA,GAAG,EAAEG;AAAxC,GAAA,CAAA,CADF,CADF;AAVF,CAA4B,CAA5B;eAiBeJ,mB","sourcesContent":["import * as React from 'react';\nimport {\n  BaseNavigationContainer,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport ThemeProvider from './theming/ThemeProvider';\nimport DefaultTheme from './theming/DefaultTheme';\nimport useBackButton from './useBackButton';\nimport { Theme } from './types';\n\ntype Props = NavigationContainerProps & {\n  theme?: Theme;\n};\n\n/**\n * Container component which holds the navigation state\n * designed for mobile apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\n  { theme = DefaultTheme, ...rest }: Props,\n  ref: React.Ref<NavigationContainerRef>\n) {\n  const refContainer = React.useRef<NavigationContainerRef>(null);\n\n  useBackButton(refContainer);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  return (\n    <ThemeProvider value={theme}>\n      <BaseNavigationContainer {...rest} ref={refContainer} />\n    </ThemeProvider>\n  );\n});\n\nexport default NavigationContainer;\n"]}