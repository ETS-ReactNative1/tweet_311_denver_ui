{"version":3,"sources":["TabRouter.tsx"],"names":["TYPE_ROUTE","TabActions","jumpTo","type","payload","name","params","getRouteHistory","history","key","routes","index","i","changeIndex","backBehavior","currentKey","state","it","router","BaseRouter","getInitialState","routeParamList","initialRouteName","routeNames","stale","getRehydratedState","route","r","undefined","Math","getStateForRouteNamesChange","getStateForRouteFocus","getStateForAction","action","previousKey","shouldActionChangeFocus","actionCreators"],"mappings":"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","sourcesContent":["import shortid from 'shortid';\nimport BaseRouter from './BaseRouter';\nimport {\n  NavigationState,\n  PartialState,\n  CommonNavigationAction,\n  Router,\n  DefaultRouterOptions,\n  Route,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior = 'initialRoute' | 'order' | 'history' | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState = Omit<NavigationState, 'history'> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n\n  switch (backBehavior) {\n    case 'initialRoute':\n      if (index !== 0) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[0].key });\n      }\n      break;\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState,\n  index: number,\n  backBehavior: BackBehavior\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter(it => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(state.routes, index, backBehavior);\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'history',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map(name => ({\n        name,\n        key: `${name}-${shortid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(routes, index, backBehavior);\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${shortid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map(name => {\n        const route = (state as PartialState<TabNavigationState>).routes.find(\n          r => r.name === name\n        );\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${shortid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(\n          typeof state.index === 'number'\n            ? state.index\n            : routeNames.indexOf(state.routes[0].name),\n          0\n        ),\n        routes.length - 1\n      );\n\n      let history = state.history?.filter(it =>\n        routes.find(r => r.key === it.key)\n      );\n\n      if (!history?.length) {\n        history = getRouteHistory(routes, index, backBehavior);\n      }\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${shortid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = routeNames.map(\n        name =>\n          state.routes.find(r => r.name === name) || {\n            name,\n            key: `${name}-${shortid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(it =>\n        routes.find(r => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(routes, index, backBehavior);\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex(r => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior);\n    },\n\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              route => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              route => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes:\n                action.payload.params !== undefined\n                  ? state.routes.map((route, i) =>\n                      i === index\n                        ? {\n                            ...route,\n                            params: {\n                              ...route.params,\n                              ...action.payload.params,\n                            },\n                          }\n                        : route\n                    )\n                  : state.routes,\n            },\n            index,\n            backBehavior\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            route => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"]}