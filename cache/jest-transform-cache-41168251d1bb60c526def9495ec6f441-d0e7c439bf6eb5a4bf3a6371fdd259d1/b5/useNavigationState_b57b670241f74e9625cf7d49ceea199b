1fe54f541249dd5d0410b2c50d71bb36
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useNavigationState;

var React = _interopRequireWildcard(require("react"));

var _useNavigation = _interopRequireDefault(require("./useNavigation"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useNavigationState(selector) {
  var navigation = (0, _useNavigation.default)();

  var _React$useState = React.useState(function () {
    return selector(navigation.dangerouslyGetState());
  }),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      setResult = _React$useState2[1];

  var selectorRef = React.useRef(selector);
  React.useEffect(function () {
    selectorRef.current = selector;
  });
  React.useEffect(function () {
    var unsubscribe = navigation.addListener('state', function (e) {
      setResult(selectorRef.current(e.data.state));
    });
    return unsubscribe;
  }, [navigation]);
  return selector(navigation.dangerouslyGetState());
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZU5hdmlnYXRpb25TdGF0ZS50c3giXSwibmFtZXMiOlsibmF2aWdhdGlvbiIsIlJlYWN0Iiwic2VsZWN0b3IiLCJzZWxlY3RvclJlZiIsInVuc3Vic2NyaWJlIiwiZSIsInNldFJlc3VsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLEtBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFFQSxJQUFBLGNBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsbUJBQUEsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU2UsU0FBQSxrQkFBQSxDQUFBLFFBQUEsRUFBeUQ7QUFDdEUsTUFBTUEsVUFBVSxHQUFHLENBQUEsR0FBQSxjQUFBLENBRG1ELE9BQ25ELEdBQW5COztBQURzRSx3QkFLaERDLEtBQUssQ0FBTEEsUUFBQUEsQ0FBZTtBQUFBLFdBQ25DQyxRQUFRLENBQUNGLFVBQVUsQ0FOaUQsbUJBTTNEQSxFQUFELENBRDJCO0FBQUEsR0FBZkMsQ0FMZ0Q7QUFBQTtBQUFBLE1BS2hFLFNBTGdFOztBQVV0RSxNQUFNRSxXQUFXLEdBQUdGLEtBQUssQ0FBTEEsTUFBQUEsQ0FBcEIsUUFBb0JBLENBQXBCO0FBRUFBLEVBQUFBLEtBQUssQ0FBTEEsU0FBQUEsQ0FBZ0IsWUFBTTtBQUNwQkUsSUFBQUEsV0FBVyxDQUFYQSxPQUFBQSxHQUFBQSxRQUFBQTtBQURGRixHQUFBQTtBQUlBQSxFQUFBQSxLQUFLLENBQUxBLFNBQUFBLENBQWdCLFlBQU07QUFDcEIsUUFBTUcsV0FBVyxHQUFHLFVBQVUsQ0FBVixXQUFBLENBQUEsT0FBQSxFQUFnQ0MsVUFBQUEsQ0FBQyxFQUFJO0FBQ3ZEQyxNQUFBQSxTQUFTLENBQUNILFdBQVcsQ0FBWEEsT0FBQUEsQ0FBb0JFLENBQUMsQ0FBREEsSUFBQUEsQ0FBOUJDLEtBQVVILENBQUQsQ0FBVEc7QUFERixLQUFvQixDQUFwQjtBQUlBLFdBQUEsV0FBQTtBQUxGTCxHQUFBQSxFQU1HLENBTkhBLFVBTUcsQ0FOSEE7QUFRQSxTQUFPQyxRQUFRLENBQUNGLFVBQVUsQ0FBMUIsbUJBQWdCQSxFQUFELENBQWY7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE5hdmlnYXRpb25TdGF0ZSB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL3JvdXRlcnMnO1xuaW1wb3J0IHVzZU5hdmlnYXRpb24gZnJvbSAnLi91c2VOYXZpZ2F0aW9uJztcblxudHlwZSBTZWxlY3RvcjxUPiA9IChzdGF0ZTogTmF2aWdhdGlvblN0YXRlKSA9PiBUO1xuXG4vKipcbiAqIEhvb2sgdG8gZ2V0IGEgdmFsdWUgZnJvbSB0aGUgY3VycmVudCBuYXZpZ2F0aW9uIHN0YXRlIHVzaW5nIGEgc2VsZWN0b3IuXG4gKlxuICogQHBhcmFtIHNlbGVjdG9yIFNlbGVjdG9yIGZ1bmN0aW9uIHRvIGdldCBhIHZhbHVlIGZyb20gdGhlIHN0YXRlLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VOYXZpZ2F0aW9uU3RhdGU8VD4oc2VsZWN0b3I6IFNlbGVjdG9yPFQ+KTogVCB7XG4gIGNvbnN0IG5hdmlnYXRpb24gPSB1c2VOYXZpZ2F0aW9uKCk7XG5cbiAgLy8gV2UgZG9uJ3QgY2FyZSBhYm91dCB0aGUgc3RhdGUgdmFsdWUsIHdlIHJ1biB0aGUgc2VsZWN0b3IgYWdhaW4gYXQgdGhlIGVuZFxuICAvLyBUaGUgc3RhdGUgaXMgb25seSB0byBtYWtlIHN1cmUgdGhhdCB0aGVyZSdzIGEgcmUtcmVuZGVyIHdoZW4gd2UgaGF2ZSBhIG5ldyB2YWx1ZVxuICBjb25zdCBbLCBzZXRSZXN1bHRdID0gUmVhY3QudXNlU3RhdGUoKCkgPT5cbiAgICBzZWxlY3RvcihuYXZpZ2F0aW9uLmRhbmdlcm91c2x5R2V0U3RhdGUoKSlcbiAgKTtcblxuICAvLyBXZSBzdG9yZSB0aGUgc2VsZWN0b3IgaW4gYSByZWYgdG8gYXZvaWQgcmUtc3Vic2NyaWJpbmcgbGlzdGVuZXJzIGV2ZXJ5IHJlbmRlclxuICBjb25zdCBzZWxlY3RvclJlZiA9IFJlYWN0LnVzZVJlZihzZWxlY3Rvcik7XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZWxlY3RvclJlZi5jdXJyZW50ID0gc2VsZWN0b3I7XG4gIH0pO1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgdW5zdWJzY3JpYmUgPSBuYXZpZ2F0aW9uLmFkZExpc3RlbmVyKCdzdGF0ZScsIGUgPT4ge1xuICAgICAgc2V0UmVzdWx0KHNlbGVjdG9yUmVmLmN1cnJlbnQoZS5kYXRhLnN0YXRlKSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdW5zdWJzY3JpYmU7XG4gIH0sIFtuYXZpZ2F0aW9uXSk7XG5cbiAgcmV0dXJuIHNlbGVjdG9yKG5hdmlnYXRpb24uZGFuZ2Vyb3VzbHlHZXRTdGF0ZSgpKTtcbn1cbiJdfQ==