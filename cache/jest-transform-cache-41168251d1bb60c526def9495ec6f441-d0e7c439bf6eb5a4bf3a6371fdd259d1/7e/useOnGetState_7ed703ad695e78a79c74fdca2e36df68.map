{"version":3,"sources":["useOnGetState.tsx"],"names":["getState","addStateGetter","React","NavigationBuilderContext","route","NavigationRouteContext","key","getRehydratedState","state","routes","getStateForRoute"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,yBAAA,GAAA,sBAAA,CAAA,OAAA,8BAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,sBAAA,CAAA,OAAA,4BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAAA,aAAA,CAAA,IAAA,EAMZ;AAAA,MANmC,gBAMnC,GAAA,IAAA,CANmC,gBAMnC;AAAA,MAJDA,QAIC,GAAA,IAAA,CAJDA,QAIC;;AAAA,0BAC0BE,KAAK,CAALA,UAAAA,CAAiBC,yBAAAA,CAA5C,OAA2BD,CAD1B;AAAA,MACOD,cADP,qBACOA,cADP;;AAED,MAAMG,KAAK,GAAGF,KAAK,CAALA,UAAAA,CAAiBG,uBAAAA,CAA/B,OAAcH,CAAd;AACA,MAAMI,GAAG,GAAGF,KAAK,GAAGA,KAAK,CAAR,GAAA,GAAjB,MAAA;AAEA,MAAMG,kBAAkB,GAAG,KAAK,CAAL,WAAA,CAAkB,YAAM;AACjD,QAAMC,KAAK,GAAGR,QAAd,EAAA;AACA,WAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEES,MAAAA,MAAM,EAAE,KAAK,CAAL,MAAA,CAAA,GAAA,CAAiBL,UAAAA,KAAK;AAAA,eAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAE5BI,UAAAA,KAAK,EAAEE,gBAAgB,CAACN,KAAK,CAAN,GAAA;AAFK,SAAA,CAAA;AAAA,OAAtB;AAFV,KAAA,CAAA;AAFyB,GAAA,EASxB,CAAA,QAAA,EATH,gBASG,CATwB,CAA3B;AAWAF,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,WAAOD,cAAP,KAAA,IAAOA,IAAAA,cAAP,KAAA,KAAA,CAAOA,GAAP,KAAA,CAAOA,GAAAA,cAAc,CAAA,GAAA,EAArB,kBAAqB,CAArB;AADFC,GAAAA,EAEG,CAAA,cAAA,EAAA,kBAAA,EAFHA,GAEG,CAFHA;AAGD","sourcesContent":["import * as React from 'react';\nimport { NavigationState } from '@react-navigation/routers';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\n\nexport default function useOnGetState({\n  getStateForRoute,\n  getState,\n}: {\n  getStateForRoute: (routeName: string) => NavigationState | undefined;\n  getState: () => NavigationState;\n}) {\n  const { addStateGetter } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n    return {\n      ...state,\n      routes: state.routes.map(route => ({\n        ...route,\n        state: getStateForRoute(route.key),\n      })),\n    };\n  }, [getState, getStateForRoute]);\n\n  React.useEffect(() => {\n    return addStateGetter?.(key, getRehydratedState);\n  }, [addStateGetter, getRehydratedState, key]);\n}\n"]}