{"version":3,"sources":["Form.js"],"names":["Form","props","componentDidMount","getPermissions","selectImage","ImagePicker","launchImageLibraryAsync","quality","result","setState","photo","uri","Constants","platform","ios","Permissions","askAsync","CAMERA_ROLL","status","alert","handlePhotoUpload","error","validateSubmit","description","state","location","validateEmail","lat","long","test","email","handleSubmit","navigation","payload","report","category","isSnowRemoval","image","images","desc","resetState","navigate","handleChange","value","type","photoButtonText","mapButtonText","styles","container","h1","h1Color","label","smallInput","text","smallWrapper","CheckBox","iconLabel","largeInput","addButton","button","buttonLabel","Component","StyleSheet","create","flex","backgroundColor","color","fontSize","marginTop","marginLeft","marginRight","borderColor","borderWidth","height","padding","width","marginBottom","alignItems","alignSelf","flexDirection","icon","borderRadius","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, StyleSheet, Text, TextInput, Image, TouchableOpacity, ScrollView, Switch } from 'react-native';\n\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: '',\n        description: '',\n        isSnowRemoval: false,\n        photo: '',\n        error: ''\n    }\n  };\n\n  componentDidMount = () => {\n    this.getPermissions();\n  };\n\n  selectImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      quality: 1\n    });\n    this.setState({photo: result.uri});\n  };\n\n  getPermissions = async () => {\n    if (Constants.platform.ios) {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== 'granted') {\n        alert('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n  };\n\n  handlePhotoUpload = async () => {\n    try {\n      this.selectImage();\n    } catch(error) {\n        this.setState({error});\n    }\n  };\n\n  validateSubmit = () => {\n    const { description } = this.state;\n    const { location } = this.props;\n    return this.validateEmail() &&\n      description &&\n      location.lat &&\n      location.long ?\n      true : false;\n  };\n\n  validateEmail = () => {\n    return /\\S+@\\S+\\.\\S+/.test(this.state.email);\n  };\n\n  handleSubmit = () => {\n    const { navigation, location } = this.props;\n    const payload = {\n      report: {\n        category: this.state.isSnowRemoval ? 'snow_removal' : 'other',\n        description: this.state.description,\n        image: this.state.images,\n        email: this.state.email\n      },\n      location\n    };\n    if (this.validateSubmit()) {\n      // this is where we make the API call\n      this.props.desc(this.state.description);\n      this.resetState();\n      navigation.navigate('Tweet');\n    } else {\n        this.setState({error: 'Please add a valid email, description, and location.'})\n    }\n  };\n\n  handleChange = (value, type) => {\n    if (this.validateSubmit()) {\n      this.setState({error: ''});\n    }\n    this.setState({[type]: value});\n  };\n\n  resetState = () => {\n    this.setState({\n        email: '',\n        description: '',\n        isSnowRemoval: false,\n        photo: '',\n        error: ''\n    });\n  };\n\n  render() {\n    const { navigation, location } = this.props;\n    const photoButtonText = this.state.photo ?\n        'Change Photo' :\n        'Add Photo';\n    const mapButtonText = location.lat && location.long ? 'Change Location' : 'Add Location';\n\n    return (\n      <View style={styles.container}>\n        <ScrollView>\n          <Text style={styles.h1}>\n            Tweet\n            <Text style={styles.h1Color}>311</Text>Denver\n          </Text>\n          <Text style={styles.label}>Enter Email:</Text>\n          <TextInput style={styles.smallInput} value={this.state.email} onChangeText={text => this.handleChange(text, 'email')}/>\n          <View style={styles.smallWrapper}>\n            <Switch style={styles.CheckBox} value={this.state.isSnowRemoval} onValueChange={value => this.setState({isSnowRemoval: value})}/>\n            <Text style={styles.iconLabel}>Snow Removal?</Text>\n          </View>\n          <Text style={styles.label}>Description:</Text>\n          <TextInput multiline={true} style={styles.largeInput} value={this.state.description} onChangeText={text => this.setState({description: text})}/>\n            <TouchableOpacity style={styles.addButton} onPress={() => navigation.navigate('Location') }>\n              <Text style={styles.iconLabel}>{mapButtonText}</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n            style={styles.addButton}\n            onPress={this.handlePhotoUpload}>\n            <Text style={styles.iconLabel}>{photoButtonText}</Text>\n          </TouchableOpacity>\n          <Text style={styles.error}>\n          {this.state.error}\n          </Text>\n          <TouchableOpacity style={styles.button} onPress={() => this.handleSubmit()}><Text style={styles.buttonLabel}>Submit</Text></TouchableOpacity>\n        </ScrollView>\n      </View>\n    )\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  h1: {\n    color: '#3976EA',\n    fontSize: 45,\n    marginTop: 60,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  h1Color: {\n    color: '#000000'\n  },\n  smallInput: {\n    borderColor: '#000000',\n    borderWidth: 1,\n    fontSize: 30,\n    height: 50,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    padding: 5,\n    width: '80%'\n  },\n  largeInput: {\n    borderColor: '#000000',\n    borderWidth: 1,\n    fontSize: 20,\n    height: 200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    padding: 5,\n    width: '80%'\n  },\n  label: {\n    color: '#3976EA',\n    fontSize: 20,\n    marginBottom: 10,\n    marginLeft: '10%',\n    marginTop: 40\n  },\n  smallWrapper: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    flex: 0,\n    flexDirection: 'row',\n    height: 50,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 40,\n    width: '80%'\n  },\n  icon: {\n    height: 50,\n    marginRight: 15,\n    width: 50\n  },\n  iconLabel: {\n    color: '#3976EA',\n    fontSize: 20\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#3976EA',\n    borderRadius: 20,\n    height: 40,\n    justifyContent: 'center',\n    marginBottom: 40,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 40,\n    width: '40%'\n  },\n  buttonLabel: {\n    color: '#FFFFFF',\n    fontSize: 20\n  },\n  CheckBox: {\n    marginRight: 15\n  },\n  error: {\n    color: 'red',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 40,\n    width: '80%'\n  },\n  addButton: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.1)',\n    borderRadius: 4,\n    height: 40,\n    justifyContent: 'center',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 40,\n    width: '80%'\n  }\n});\n\nexport default Form;\n"]}