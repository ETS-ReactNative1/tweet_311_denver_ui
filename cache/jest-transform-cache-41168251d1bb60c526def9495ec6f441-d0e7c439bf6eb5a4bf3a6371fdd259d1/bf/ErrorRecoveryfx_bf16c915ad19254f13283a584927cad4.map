{"version":3,"sources":["../src/ErrorRecovery.fx.ts"],"names":[],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,IAAI,sBAAS,EAAT,KAAgB,KAApB,EAA2B;AACzB,MAAM,aAAa,GAAG,UAAU,CAAC,gBAAX,EAAtB;AAGA,EAAA,UAAU,CAAC,gBAAX,CAA4B,iBAAO,KAAP,EAAc,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,iBACtB,2BAAkB,iBADI;AAAA;AAAA;AAAA;;AAAA;AAAA,8CAElB,2BAAkB,iBAAlB,CAAoC,gDAApC,CAFkB;;AAAA;AAI1B,YAAA,aAAa,CAAC,KAAD,EAAQ,OAAR,CAAb;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;AAMD,CAVD,MAUO;AACL,EAAA,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAiC,YAAK;AACpC,+BAAkB,iBAAlB,CAAoC,gDAApC;AACD,GAFD;AAGD","sourcesContent":["import { Platform } from 'react-native';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}\n"],"sourceRoot":""}