6be9f681dc8be97a49cf03a341d5558c
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = require('react');

var StyleSheet = require("../../StyleSheet/StyleSheet");

var TouchableWithoutFeedback = require("../../Components/Touchable/TouchableWithoutFeedback");

var View = require("../../Components/View/View");

var YellowBoxStyle = require("./YellowBoxStyle");

var YellowBoxPressable = function (_React$Component) {
  (0, _inherits2.default)(YellowBoxPressable, _React$Component);

  function YellowBoxPressable() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, YellowBoxPressable);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(YellowBoxPressable)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      pressed: false
    };

    _this._handlePressIn = function () {
      _this.setState({
        pressed: true
      });
    };

    _this._handlePressOut = function () {
      _this.setState({
        pressed: false
      });
    };

    return _this;
  }

  (0, _createClass2.default)(YellowBoxPressable, [{
    key: "render",
    value: function render() {
      var content = React.createElement(View, {
        style: StyleSheet.compose({
          backgroundColor: this.state.pressed ? this.props.backgroundColor.pressed : this.props.backgroundColor.default
        }, this.props.style)
      }, this.props.children);
      return this.props.onPress == null ? content : React.createElement(TouchableWithoutFeedback, {
        hitSlop: this.props.hitSlop,
        onPress: this.props.onPress,
        onPressIn: this._handlePressIn,
        onPressOut: this._handlePressOut
      }, content);
    }
  }]);
  return YellowBoxPressable;
}(React.Component);

YellowBoxPressable.defaultProps = {
  backgroundColor: {
    default: YellowBoxStyle.getBackgroundColor(0.95),
    pressed: YellowBoxStyle.getHighlightColor(1)
  }
};
module.exports = YellowBoxPressable;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlllbGxvd0JveFByZXNzYWJsZS5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJTdHlsZVNoZWV0IiwiVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrIiwiVmlldyIsIlllbGxvd0JveFN0eWxlIiwiWWVsbG93Qm94UHJlc3NhYmxlIiwic3RhdGUiLCJwcmVzc2VkIiwiX2hhbmRsZVByZXNzSW4iLCJzZXRTdGF0ZSIsIl9oYW5kbGVQcmVzc091dCIsImNvbnRlbnQiLCJjb21wb3NlIiwiYmFja2dyb3VuZENvbG9yIiwicHJvcHMiLCJkZWZhdWx0Iiwic3R5bGUiLCJjaGlsZHJlbiIsIm9uUHJlc3MiLCJoaXRTbG9wIiwiQ29tcG9uZW50IiwiZGVmYXVsdFByb3BzIiwiZ2V0QmFja2dyb3VuZENvbG9yIiwiZ2V0SGlnaGxpZ2h0Q29sb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLFVBQVUsR0FBR0QsT0FBTywrQkFBMUI7O0FBQ0EsSUFBTUUsd0JBQXdCLEdBQUdGLE9BQU8sdURBQXhDOztBQUNBLElBQU1HLElBQUksR0FBR0gsT0FBTyw4QkFBcEI7O0FBQ0EsSUFBTUksY0FBYyxHQUFHSixPQUFPLG9CQUE5Qjs7SUFxQk1LLGtCOzs7Ozs7Ozs7Ozs7Ozs7VUFVSkMsSyxHQUFlO0FBQ2JDLE1BQUFBLE9BQU8sRUFBRTtBQURJLEs7O1VBK0JmQyxjLEdBQWlCLFlBQU07QUFDckIsWUFBS0MsUUFBTCxDQUFjO0FBQUNGLFFBQUFBLE9BQU8sRUFBRTtBQUFWLE9BQWQ7QUFDRCxLOztVQUVERyxlLEdBQWtCLFlBQU07QUFDdEIsWUFBS0QsUUFBTCxDQUFjO0FBQUNGLFFBQUFBLE9BQU8sRUFBRTtBQUFWLE9BQWQ7QUFDRCxLOzs7Ozs7OzZCQWpDb0I7QUFDbkIsVUFBTUksT0FBTyxHQUNYLG9CQUFDLElBQUQ7QUFDRSxRQUFBLEtBQUssRUFBRVYsVUFBVSxDQUFDVyxPQUFYLENBQ0w7QUFDRUMsVUFBQUEsZUFBZSxFQUFFLEtBQUtQLEtBQUwsQ0FBV0MsT0FBWCxHQUNiLEtBQUtPLEtBQUwsQ0FBV0QsZUFBWCxDQUEyQk4sT0FEZCxHQUViLEtBQUtPLEtBQUwsQ0FBV0QsZUFBWCxDQUEyQkU7QUFIakMsU0FESyxFQU1MLEtBQUtELEtBQUwsQ0FBV0UsS0FOTjtBQURULFNBU0csS0FBS0YsS0FBTCxDQUFXRyxRQVRkLENBREY7QUFhQSxhQUFPLEtBQUtILEtBQUwsQ0FBV0ksT0FBWCxJQUFzQixJQUF0QixHQUNMUCxPQURLLEdBR0wsb0JBQUMsd0JBQUQ7QUFDRSxRQUFBLE9BQU8sRUFBRSxLQUFLRyxLQUFMLENBQVdLLE9BRHRCO0FBRUUsUUFBQSxPQUFPLEVBQUUsS0FBS0wsS0FBTCxDQUFXSSxPQUZ0QjtBQUdFLFFBQUEsU0FBUyxFQUFFLEtBQUtWLGNBSGxCO0FBSUUsUUFBQSxVQUFVLEVBQUUsS0FBS0U7QUFKbkIsU0FLR0MsT0FMSCxDQUhGO0FBV0Q7OztFQXZDOEJaLEtBQUssQ0FBQ3FCLFM7O0FBQWpDZixrQixDQUNHZ0IsWSxHQUVEO0FBQ0pSLEVBQUFBLGVBQWUsRUFBRTtBQUNmRSxJQUFBQSxPQUFPLEVBQUVYLGNBQWMsQ0FBQ2tCLGtCQUFmLENBQWtDLElBQWxDLENBRE07QUFFZmYsSUFBQUEsT0FBTyxFQUFFSCxjQUFjLENBQUNtQixpQkFBZixDQUFpQyxDQUFqQztBQUZNO0FBRGIsQztBQStDUkMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCcEIsa0JBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IFN0eWxlU2hlZXQgPSByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L1N0eWxlU2hlZXQnKTtcbmNvbnN0IFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayA9IHJlcXVpcmUoJy4uLy4uL0NvbXBvbmVudHMvVG91Y2hhYmxlL1RvdWNoYWJsZVdpdGhvdXRGZWVkYmFjaycpO1xuY29uc3QgVmlldyA9IHJlcXVpcmUoJy4uLy4uL0NvbXBvbmVudHMvVmlldy9WaWV3Jyk7XG5jb25zdCBZZWxsb3dCb3hTdHlsZSA9IHJlcXVpcmUoJy4vWWVsbG93Qm94U3R5bGUnKTtcblxuaW1wb3J0IHR5cGUge0VkZ2VJbnNldHNQcm9wfSBmcm9tICcuLi8uLi9TdHlsZVNoZWV0L0VkZ2VJbnNldHNQcm9wVHlwZSc7XG5pbXBvcnQgdHlwZSB7Vmlld1N0eWxlUHJvcH0gZnJvbSAnLi4vLi4vU3R5bGVTaGVldC9TdHlsZVNoZWV0JztcbmltcG9ydCB0eXBlIHtQcmVzc0V2ZW50fSBmcm9tICcuLi8uLi9UeXBlcy9Db3JlRXZlbnRUeXBlcyc7XG5cbnR5cGUgUHJvcHMgPSAkUmVhZE9ubHk8e3xcbiAgYmFja2dyb3VuZENvbG9yOiAkUmVhZE9ubHk8e3xcbiAgICBkZWZhdWx0OiBzdHJpbmcsXG4gICAgcHJlc3NlZDogc3RyaW5nLFxuICB8fT4sXG4gIGNoaWxkcmVuPzogUmVhY3QuTm9kZSxcbiAgaGl0U2xvcD86ID9FZGdlSW5zZXRzUHJvcCxcbiAgb25QcmVzcz86ID8oZXZlbnQ6IFByZXNzRXZlbnQpID0+IHZvaWQsXG4gIHN0eWxlPzogVmlld1N0eWxlUHJvcCxcbnx9PjtcblxudHlwZSBTdGF0ZSA9IHt8XG4gIHByZXNzZWQ6IGJvb2xlYW4sXG58fTtcblxuY2xhc3MgWWVsbG93Qm94UHJlc3NhYmxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzLCBTdGF0ZT4ge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzOiAkVEVNUE9SQVJZJG9iamVjdDx7fFxuICAgIGJhY2tncm91bmRDb2xvcjogJFRFTVBPUkFSWSRvYmplY3Q8e3xkZWZhdWx0OiBzdHJpbmcsIHByZXNzZWQ6IHN0cmluZ3x9PixcbiAgfH0+ID0ge1xuICAgIGJhY2tncm91bmRDb2xvcjoge1xuICAgICAgZGVmYXVsdDogWWVsbG93Qm94U3R5bGUuZ2V0QmFja2dyb3VuZENvbG9yKDAuOTUpLFxuICAgICAgcHJlc3NlZDogWWVsbG93Qm94U3R5bGUuZ2V0SGlnaGxpZ2h0Q29sb3IoMSksXG4gICAgfSxcbiAgfTtcblxuICBzdGF0ZTogU3RhdGUgPSB7XG4gICAgcHJlc3NlZDogZmFsc2UsXG4gIH07XG5cbiAgcmVuZGVyKCk6IFJlYWN0Lk5vZGUge1xuICAgIGNvbnN0IGNvbnRlbnQgPSAoXG4gICAgICA8Vmlld1xuICAgICAgICBzdHlsZT17U3R5bGVTaGVldC5jb21wb3NlKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhpcy5zdGF0ZS5wcmVzc2VkXG4gICAgICAgICAgICAgID8gdGhpcy5wcm9wcy5iYWNrZ3JvdW5kQ29sb3IucHJlc3NlZFxuICAgICAgICAgICAgICA6IHRoaXMucHJvcHMuYmFja2dyb3VuZENvbG9yLmRlZmF1bHQsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB0aGlzLnByb3BzLnN0eWxlLFxuICAgICAgICApfT5cbiAgICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgICA8L1ZpZXc+XG4gICAgKTtcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5vblByZXNzID09IG51bGwgPyAoXG4gICAgICBjb250ZW50XG4gICAgKSA6IChcbiAgICAgIDxUb3VjaGFibGVXaXRob3V0RmVlZGJhY2tcbiAgICAgICAgaGl0U2xvcD17dGhpcy5wcm9wcy5oaXRTbG9wfVxuICAgICAgICBvblByZXNzPXt0aGlzLnByb3BzLm9uUHJlc3N9XG4gICAgICAgIG9uUHJlc3NJbj17dGhpcy5faGFuZGxlUHJlc3NJbn1cbiAgICAgICAgb25QcmVzc091dD17dGhpcy5faGFuZGxlUHJlc3NPdXR9PlxuICAgICAgICB7Y29udGVudH1cbiAgICAgIDwvVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrPlxuICAgICk7XG4gIH1cblxuICBfaGFuZGxlUHJlc3NJbiA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtwcmVzc2VkOiB0cnVlfSk7XG4gIH07XG5cbiAgX2hhbmRsZVByZXNzT3V0ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe3ByZXNzZWQ6IGZhbHNlfSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gWWVsbG93Qm94UHJlc3NhYmxlO1xuIl19