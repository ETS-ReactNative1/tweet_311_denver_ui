{"version":3,"sources":["CommonActions.tsx"],"names":["type","payload","name","params","state"],"mappings":";;;;;;;;;;AA6BO,SAAA,MAAA,GAA0B;AAC/B,SAAO;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;;AAQM,SAAA,QAAA,GAAwC;AAC7C,MAAI,QAAA,SAAA,CAAA,MAAA,IAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,MAAJ,QAAA,EAAiC;AAC/B,WAAO;AAAEA,MAAAA,IAAI,EAAN,UAAA;AAAoBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAA,SAAA,CAAA,MAAA,IAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAAN,CAAM,CAAN;AAAiBC,QAAAA,MAAM,EAAA,SAAA,CAAA,MAAA,IAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAAA,CAAA;AAAvB;AAA7B,KAAP;AADF,GAAA,MAEO;AACL,QAAMF,OAAO,GAAA,SAAA,CAAA,MAAA,IAAA,CAAA,GAAA,SAAA,GAAA,SAAA,CAAb,CAAa,CAAb;;AAEA,QAAI,CAACA,OAAO,CAAPA,cAAAA,CAAD,KAACA,CAAD,IAAkC,CAACA,OAAO,CAAPA,cAAAA,CAAvC,MAAuCA,CAAvC,EAAuE;AACrE,YAAM,IAAA,KAAA,CAAN,wFAAM,CAAN;AAGD;;AAED,WAAO;AAAED,MAAAA,IAAI,EAAN,UAAA;AAAoBC,MAAAA,OAAAA,EAAAA;AAApB,KAAP;AACD;AACF;;AAEM,SAAA,KAAA,CAAA,KAAA,EAA6D;AAClE,SAAO;AAAED,IAAAA,IAAI,EAAN,OAAA;AAAiBC,IAAAA,OAAO,EAAEG;AAA1B,GAAP;AACD;;AAEM,SAAA,SAAA,CAAA,MAAA,EAA2C;AAChD,SAAO;AAAEJ,IAAAA,IAAI,EAAN,YAAA;AAAsBC,IAAAA,OAAO,EAAE;AAAEE,MAAAA,MAAAA,EAAAA;AAAF;AAA/B,GAAP;AACD","sourcesContent":["import { NavigationState, PartialState } from './types';\n\nexport type Action =\n  | {\n      type: 'GO_BACK';\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'NAVIGATE';\n      payload:\n        | { key: string; name?: undefined; params?: object }\n        | { name: string; key?: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'RESET';\n      payload: PartialState<NavigationState>;\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'SET_PARAMS';\n      payload: { params?: object };\n      source?: string;\n      target?: string;\n    };\n\nexport function goBack(): Action {\n  return { type: 'GO_BACK' };\n}\n\nexport function navigate(\n  route:\n    | { key: string; params?: object }\n    | { name: string; key?: string; params?: object }\n): Action;\nexport function navigate(name: string, params?: object): Action;\nexport function navigate(...args: any): Action {\n  if (typeof args[0] === 'string') {\n    return { type: 'NAVIGATE', payload: { name: args[0], params: args[1] } };\n  } else {\n    const payload = args[0];\n\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error(\n        'While calling navigate with an object as the argument, you need to specify name or key'\n      );\n    }\n\n    return { type: 'NAVIGATE', payload };\n  }\n}\n\nexport function reset(state: PartialState<NavigationState>): Action {\n  return { type: 'RESET', payload: state };\n}\n\nexport function setParams(params: object): Action {\n  return { type: 'SET_PARAMS', payload: { params } };\n}\n"]}