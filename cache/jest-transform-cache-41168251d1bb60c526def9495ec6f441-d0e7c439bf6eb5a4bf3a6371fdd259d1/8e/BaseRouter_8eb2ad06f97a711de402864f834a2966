1c0afec0964d73d1c210735c5d8c1027
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var BaseRouter = {
  getStateForAction: function getStateForAction(state, action) {
    switch (action.type) {
      case 'SET_PARAMS':
        {
          var index = action.source ? state.routes.findIndex(function (r) {
            return r.key === action.source;
          }) : state.index;

          if (index === -1) {
            return null;
          }

          return _objectSpread({}, state, {
            routes: state.routes.map(function (r, i) {
              return i === index ? _objectSpread({}, r, {
                params: _objectSpread({}, r.params, {}, action.payload.params)
              }) : r;
            })
          });
        }

      case 'RESET':
        return action.payload;

      default:
        return null;
    }
  },
  shouldActionChangeFocus: function shouldActionChangeFocus(action) {
    return action.type === 'NAVIGATE';
  }
};
var _default = BaseRouter;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhc2VSb3V0ZXIudHN4Il0sIm5hbWVzIjpbIkJhc2VSb3V0ZXIiLCJnZXRTdGF0ZUZvckFjdGlvbiIsImFjdGlvbiIsImluZGV4Iiwic3RhdGUiLCJyIiwicm91dGVzIiwicGFyYW1zIiwic2hvdWxkQWN0aW9uQ2hhbmdlRm9jdXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTUEsSUFBTUEsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxpQkFEaUIsNkJBQ0EsS0FEQSxFQUNBLE1BREEsRUFJcUI7QUFDcEMsWUFBUUMsTUFBTSxDQUFkLElBQUE7QUFDRSxXQUFBLFlBQUE7QUFBbUI7QUFDakIsY0FBTUMsS0FBSyxHQUFHRCxNQUFNLENBQU5BLE1BQUFBLEdBQ1ZFLEtBQUssQ0FBTEEsTUFBQUEsQ0FBQUEsU0FBQUEsQ0FBdUJDLFVBQUFBLENBQUM7QUFBQSxtQkFBSUEsQ0FBQyxDQUFEQSxHQUFBQSxLQUFVSCxNQUFNLENBRGxDQSxNQUNjO0FBQUEsV0FBeEJFLENBRFVGLEdBRVZFLEtBQUssQ0FGVCxLQUFBOztBQUlBLGNBQUlELEtBQUssS0FBSyxDQUFkLENBQUEsRUFBa0I7QUFDaEIsbUJBQUEsSUFBQTtBQUNEOztBQUVELGlCQUFBLGFBQUEsQ0FBQSxFQUFBLEVBQUEsS0FBQSxFQUFBO0FBRUVHLFlBQUFBLE1BQU0sRUFBRSxLQUFLLENBQUwsTUFBQSxDQUFBLEdBQUEsQ0FBaUIsVUFBQSxDQUFBLEVBQUEsQ0FBQTtBQUFBLHFCQUN2QixDQUFDLEtBQUQsS0FBQSxHQUFBLGFBQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQSxFQUFBO0FBQ1lDLGdCQUFBQSxNQUFNLEVBQUEsYUFBQSxDQUFBLEVBQUEsRUFBT0YsQ0FBQyxDQUFSLE1BQUEsRUFBQSxFQUFBLEVBQW9CSCxNQUFNLENBQU5BLE9BQUFBLENBQXBCLE1BQUE7QUFEbEIsZUFBQSxDQUFBLEdBRE0sQ0FBaUI7QUFBQSxhQUFqQjtBQUZWLFdBQUEsQ0FBQTtBQVFEOztBQUVELFdBQUEsT0FBQTtBQUNFLGVBQU9BLE1BQU0sQ0FBYixPQUFBOztBQUVGO0FBQ0UsZUFBQSxJQUFBO0FBeEJKO0FBTGUsR0FBQTtBQWlDakJNLEVBQUFBLHVCQWpDaUIsbUNBaUNNLE1BakNOLEVBaUN1QztBQUN0RCxXQUFPTixNQUFNLENBQU5BLElBQUFBLEtBQVAsVUFBQTtBQUNEO0FBbkNnQixDQUFuQjtlQXNDZUYsVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk5hdmlnYXRpb25BY3Rpb24sIE5hdmlnYXRpb25TdGF0ZSwgUGFydGlhbFN0YXRlIH0gZnJvbSAnLi90eXBlcyc7XG5cbi8qKlxuICogQmFzZSByb3V0ZXIgb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgd2hlbiB3cml0aW5nIGN1c3RvbSByb3V0ZXJzLlxuICogVGhpcyBwcm92aWRlcyBmZXcgaGVscGVyIG1ldGhvZHMgdG8gaGFuZGxlIGNvbW1vbiBhY3Rpb25zIHN1Y2ggYXMgYFJFU0VUYC5cbiAqL1xuY29uc3QgQmFzZVJvdXRlciA9IHtcbiAgZ2V0U3RhdGVGb3JBY3Rpb248U3RhdGUgZXh0ZW5kcyBOYXZpZ2F0aW9uU3RhdGU+KFxuICAgIHN0YXRlOiBTdGF0ZSxcbiAgICBhY3Rpb246IENvbW1vbk5hdmlnYXRpb25BY3Rpb25cbiAgKTogU3RhdGUgfCBQYXJ0aWFsU3RhdGU8U3RhdGU+IHwgbnVsbCB7XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgY2FzZSAnU0VUX1BBUkFNUyc6IHtcbiAgICAgICAgY29uc3QgaW5kZXggPSBhY3Rpb24uc291cmNlXG4gICAgICAgICAgPyBzdGF0ZS5yb3V0ZXMuZmluZEluZGV4KHIgPT4gci5rZXkgPT09IGFjdGlvbi5zb3VyY2UpXG4gICAgICAgICAgOiBzdGF0ZS5pbmRleDtcblxuICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHJvdXRlczogc3RhdGUucm91dGVzLm1hcCgociwgaSkgPT5cbiAgICAgICAgICAgIGkgPT09IGluZGV4XG4gICAgICAgICAgICAgID8geyAuLi5yLCBwYXJhbXM6IHsgLi4uci5wYXJhbXMsIC4uLmFjdGlvbi5wYXlsb2FkLnBhcmFtcyB9IH1cbiAgICAgICAgICAgICAgOiByXG4gICAgICAgICAgKSxcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgY2FzZSAnUkVTRVQnOlxuICAgICAgICByZXR1cm4gYWN0aW9uLnBheWxvYWQgYXMgUGFydGlhbFN0YXRlPFN0YXRlPjtcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9LFxuXG4gIHNob3VsZEFjdGlvbkNoYW5nZUZvY3VzKGFjdGlvbjogQ29tbW9uTmF2aWdhdGlvbkFjdGlvbikge1xuICAgIHJldHVybiBhY3Rpb24udHlwZSA9PT0gJ05BVklHQVRFJztcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VSb3V0ZXI7XG4iXX0=