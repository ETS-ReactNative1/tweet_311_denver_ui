{"version":3,"sources":["HeaderBackButton.tsx"],"names":["labelVisible","Platform","pressColorAndroid","tintColor","truncatedLabel","colors","React","customTintColor","ios","default","text","customPressColorAndroid","dark","handleLabelLayout","e","onLabelLayout","setInitialLabelWidth","shouldTruncateLabel","initialLabelWidth","screenLayout","titleLayout","renderBackImage","backImage","styles","Boolean","require","renderLabel","leftLabelText","labelElement","minWidth","color","allowFontScaling","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","onPress","requestAnimationFrame","label","disabled","top","right","bottom","left","container","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","labelWrapper","icon","height","width","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","margin","iconWithLabel","flex","justifyContent","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport { useTheme } from '@react-navigation/native';\nimport MaskedView from '../MaskedView';\nimport TouchableItem from '../TouchableItem';\nimport { StackHeaderLeftButtonProps } from '../../types';\n\ntype Props = StackHeaderLeftButtonProps;\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColorAndroid: customPressColorAndroid,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n}: Props) {\n  const { dark, colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const pressColorAndroid =\n    customPressColorAndroid !== undefined\n      ? customPressColorAndroid\n      : dark\n      ? 'rgba(255, 255, 255, .32)'\n      : 'rgba(0, 0, 0, .32)';\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <TouchableItem\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={\n        label && label !== 'Back' ? `${label}, back` : 'Go back'\n      }\n      accessibilityTraits=\"button\"\n      testID=\"header-back\"\n      delayPressIn={0}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColorAndroid}\n      style={[styles.container, disabled && styles.disabled]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]}