{"version":3,"sources":["MapOverlay.js"],"names":["viewConfig","uiViewClassName","validAttributes","image","propTypes","View","PropTypes","any","isRequired","bounds","arrayOf","array","tappable","bool","onPress","func","MapOverlay","props","startsWith","Image","resolveAssetSource","uri","AIRMapOverlay","getAirComponent","styles","overlay","style","Component","StyleSheet","create","position","backgroundColor","Animated","createAnimatedComponent","componentType","providers","google","ios","SUPPORTED","android","USES_DEFAULT_IMPLEMENTATION"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAKA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,eAAe,EAAE,yBADA;AAEjBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE;AADQ;AAFA,CAAnB;;AAOA,IAAMC,SAAS,qBACVC,kBAAKD,SADK;AAGbD,EAAAA,KAAK,EAAEG,mBAAUC,GAAV,CAAcC,UAHR;AAKbC,EAAAA,MAAM,EAAEH,mBAAUI,OAAV,CAAkBJ,mBAAUK,KAAV,CAAgBH,UAAlC,EAA8CA,UALzC;AASbI,EAAAA,QAAQ,EAAEN,mBAAUO,IATP;AAWbC,EAAAA,OAAO,EAAER,mBAAUS;AAXN,EAAf;;IAcMC,U;;;;;;;;;;6BACK;AACP,UAAIb,KAAJ;;AACA,UAAI,KAAKc,KAAL,CAAWd,KAAf,EAAsB;AACpB,YACE,OAAO,KAAKc,KAAL,CAAWd,KAAX,CAAiBe,UAAxB,KAAuC,UAAvC,IACA,KAAKD,KAAL,CAAWd,KAAX,CAAiBe,UAAjB,CAA4B,MAA5B,CAFF,EAGE;AACAf,UAAAA,KAAK,GAAG,KAAKc,KAAL,CAAWd,KAAnB;AACD,SALD,MAKO;AACLA,UAAAA,KAAK,GAAGgB,mBAAMC,kBAAN,CAAyB,KAAKH,KAAL,CAAWd,KAApC,KAA8C,EAAtD;AACAA,UAAAA,KAAK,GAAGA,KAAK,CAACkB,GAAd;AACD;AACF;;AAED,UAAMC,aAAa,GAAG,KAAKC,eAAL,EAAtB;AAEA,aACE,6BAAC,aAAD,6BACM,KAAKN,KADX;AAEE,QAAA,KAAK,EAAEd,KAFT;AAGE,QAAA,KAAK,EAAE,CAACqB,MAAM,CAACC,OAAR,EAAiB,KAAKR,KAAL,CAAWS,KAA5B;AAHT,SADF;AAOD;;;EAxBsBC,gB;;AA2BzBX,UAAU,CAACZ,SAAX,GAAuBA,SAAvB;AACAY,UAAU,CAAChB,UAAX,GAAwBA,UAAxB;;AAEA,IAAMwB,MAAM,GAAGI,wBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,eAAe,EAAE;AAFV;AADsB,CAAlB,CAAf;;AAOAf,UAAU,CAACgB,QAAX,GAAsBA,sBAASC,uBAAT,CAAiCjB,UAAjC,CAAtB;;eAEe,mCAAqBA,UAArB,EAAiC;AAC9CkB,EAAAA,aAAa,EAAE,SAD+B;AAE9CC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEC,+BADC;AAENC,MAAAA,OAAO,EAAEC;AAFH;AADC;AAFmC,CAAjC,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet, Image, Animated } from 'react-native';\n\nimport decorateMapComponent, {\n  SUPPORTED,\n  USES_DEFAULT_IMPLEMENTATION,\n} from './decorateMapComponent';\n\nconst viewConfig = {\n  uiViewClassName: 'AIR<provider>MapOverlay',\n  validAttributes: {\n    image: true,\n  },\n};\n\nconst propTypes = {\n  ...View.propTypes,\n  // A custom image to be used as overlay.\n  image: PropTypes.any.isRequired,\n  // Top left and bottom right coordinates for the overlay\n  bounds: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n  /* Boolean to allow an overlay to be tappable and use the\n   * onPress function\n   */\n  tappable: PropTypes.bool,\n  // Callback that is called when the user presses on the overlay\n  onPress: PropTypes.func,\n};\n\nclass MapOverlay extends Component {\n  render() {\n    let image;\n    if (this.props.image) {\n      if (\n        typeof this.props.image.startsWith === 'function' &&\n        this.props.image.startsWith('http')\n      ) {\n        image = this.props.image;\n      } else {\n        image = Image.resolveAssetSource(this.props.image) || {};\n        image = image.uri;\n      }\n    }\n\n    const AIRMapOverlay = this.getAirComponent();\n\n    return (\n      <AIRMapOverlay\n        {...this.props}\n        image={image}\n        style={[styles.overlay, this.props.style]}\n      />\n    );\n  }\n}\n\nMapOverlay.propTypes = propTypes;\nMapOverlay.viewConfig = viewConfig;\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n});\n\nMapOverlay.Animated = Animated.createAnimatedComponent(MapOverlay);\n\nexport default decorateMapComponent(MapOverlay, {\n  componentType: 'Overlay',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]}