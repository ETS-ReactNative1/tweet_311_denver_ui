{"version":3,"sources":["MaskedView.native.tsx"],"names":["isMaskedViewAvailable","UIManager","children","rest"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qCAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAMA,qBAAqB,GAEzBC,YAAAA,CAAAA,SAAAA,CAAAA,oBAAAA,CAAAA,eAAAA,KAFF,IAAA;;AAIe,SAAA,UAAA,CAAA,IAAA,EAAkD;AAA9B,MAAEC,QAAF,GAA8B,IAA9B,CAAEA,QAAF;AAAA,MAAeC,IAAf,GAA8B,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAA9B;;AACjC,MAAA,qBAAA,EAA2B;AACzB,WAAO,KAAA,CAAA,aAAA,CAAC,WAAA,CAAD,OAAA,EAAA,IAAA,EAAP,QAAO,CAAP;AACD;;AAED,SAAA,QAAA;AACD","sourcesContent":["import * as React from 'react';\nimport { UIManager } from 'react-native';\nimport RNCMaskedView from '@react-native-community/masked-view';\n\ntype Props = React.ComponentProps<typeof RNCMaskedView> & {\n  children: React.ReactElement;\n};\n\nconst isMaskedViewAvailable =\n  // @ts-ignore\n  UIManager.getViewManagerConfig('RNCMaskedView') != null;\n\nexport default function MaskedView({ children, ...rest }: Props) {\n  if (isMaskedViewAvailable) {\n    return <RNCMaskedView {...rest}>{children}</RNCMaskedView>;\n  }\n\n  return children;\n}\n"]}