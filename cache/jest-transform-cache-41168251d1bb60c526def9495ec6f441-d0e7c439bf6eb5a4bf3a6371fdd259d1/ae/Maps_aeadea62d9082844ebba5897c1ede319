ff27d57dcb597e68abc2d7b4799c71df
var cov_23htqvu2t5 = function () {
  var path = "/Users/garrettiannuzzi/tweet_311_denver_ui/src/components/Maps/Maps.js";
  var hash = "1914397699c6015c8552870b325aaed7ac9a8a14";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/garrettiannuzzi/tweet_311_denver_ui/src/components/Maps/Maps.js",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 17
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 10,
          column: 5
        }
      },
      "2": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "3": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 21,
          column: 7
        }
      },
      "4": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "5": {
        start: {
          line: 25,
          column: 40
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "6": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "7": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "8": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 49
        }
      },
      "9": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 32
        }
      },
      "10": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "11": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 34
        }
      },
      "12": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 46,
          column: 6
        }
      },
      "13": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 45,
          column: 18
        }
      },
      "14": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "15": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "16": {
        start: {
          line: 68,
          column: 61
        },
        end: {
          line: 68,
          column: 80
        }
      },
      "17": {
        start: {
          line: 76,
          column: 15
        },
        end: {
          line: 108,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 6,
            column: 3
          }
        },
        loc: {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 11,
            column: 3
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 17
          }
        },
        loc: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 22,
            column: 3
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 17
          }
        },
        loc: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 24
          }
        },
        loc: {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 39
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 2
          },
          end: {
            line: 49,
            column: 3
          }
        },
        loc: {
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 73,
            column: 3
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 55
          },
          end: {
            line: 68,
            column: 56
          }
        },
        loc: {
          start: {
            line: 68,
            column: 61
          },
          end: {
            line: 68,
            column: 80
          }
        },
        line: 68
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 27
          },
          end: {
            line: 66,
            column: 31
          }
        }, {
          start: {
            line: 66,
            column: 34
          },
          end: {
            line: 66,
            column: 52
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "1914397699c6015c8552870b325aaed7ac9a8a14"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNativeMaps = _interopRequireWildcard(require("react-native-maps"));

var Maps = function (_Component) {
  (0, _inherits2.default)(Maps, _Component);

  function Maps(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Maps);
    cov_23htqvu2t5.f[0]++;
    cov_23htqvu2t5.s[0]++;
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Maps).call(this, props));
    _this.handlePress = (cov_23htqvu2t5.s[2]++, function (e) {
      cov_23htqvu2t5.f[1]++;
      cov_23htqvu2t5.s[3]++;

      _this.setState({
        markers: [{
          coordinate: e.nativeEvent.coordinate,
          pin: _react.default.createElement(_reactNative.Image, {
            style: styles.img,
            source: require("../../../assets/images/pin.png")
          })
        }]
      });
    });
    _this.handleSubmit = (cov_23htqvu2t5.s[4]++, function () {
      cov_23htqvu2t5.f[2]++;

      var _ref = (cov_23htqvu2t5.s[5]++, _this.props),
          navigation = _ref.navigation,
          setLocation = _ref.setLocation;

      var _ref2 = (cov_23htqvu2t5.s[6]++, _this.state),
          markers = _ref2.markers;

      var latAndLong = (cov_23htqvu2t5.s[7]++, {
        lat: markers[0].coordinate.latitude,
        long: markers[0].coordinate.longitude
      });
      cov_23htqvu2t5.s[8]++;
      setLocation(latAndLong.lat, latAndLong.long);
      cov_23htqvu2t5.s[9]++;
      navigation.navigate('Home');
    });
    _this.getLocation = (cov_23htqvu2t5.s[10]++, function () {
      cov_23htqvu2t5.f[3]++;

      var _ref3 = (cov_23htqvu2t5.s[11]++, _this.state),
          markers = _ref3.markers;

      cov_23htqvu2t5.s[12]++;
      return markers.map(function (marker) {
        cov_23htqvu2t5.f[4]++;
        cov_23htqvu2t5.s[13]++;
        return _react.default.createElement(_reactNativeMaps.Marker, (0, _extends2.default)({}, marker, {
          key: marker.coordinate
        }), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.img
        }, marker.pin)));
      });
    });
    cov_23htqvu2t5.s[1]++;
    _this.state = {
      markers: []
    };
    return _this;
  }

  (0, _createClass2.default)(Maps, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      cov_23htqvu2t5.f[5]++;

      var _ref4 = (cov_23htqvu2t5.s[14]++, this.state),
          markers = _ref4.markers;

      cov_23htqvu2t5.s[15]++;
      return _react.default.createElement(_reactNative.View, {
        style: styles.mapContainer
      }, _react.default.createElement(_reactNativeMaps.default, {
        style: styles.map,
        region: {
          latitude: 39.7392,
          longitude: -104.9903,
          latitudeDelta: 0.0922,
          longitudeDelta: 0.0421
        },
        showsTraffic: true,
        onPress: this.handlePress
      }, !markers.length ? (cov_23htqvu2t5.b[0][0]++, null) : (cov_23htqvu2t5.b[0][1]++, this.getLocation())), _react.default.createElement(_reactNative.TouchableOpacity, {
        style: styles.btn,
        onPress: function onPress() {
          cov_23htqvu2t5.f[6]++;
          cov_23htqvu2t5.s[16]++;
          return _this2.handleSubmit();
        }
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.text
      }, "Add Location")));
    }
  }]);
  return Maps;
}(_react.Component);

;
var styles = (cov_23htqvu2t5.s[17]++, _reactNative.StyleSheet.create({
  mapContainer: {
    alignItems: 'center',
    backgroundColor: '#fff',
    flexDirection: 'column',
    flex: 1,
    width: '100%'
  },
  map: {
    height: 650,
    width: '100%'
  },
  text: {
    color: '#FFFFFF',
    fontSize: 20
  },
  img: {
    height: 30,
    width: 30
  },
  btn: {
    alignItems: 'center',
    backgroundColor: '#3976EA',
    borderRadius: 20,
    height: 40,
    justifyContent: 'center',
    marginBottom: 40,
    marginLeft: 'auto',
    marginRight: 'auto',
    marginTop: 30,
    width: '40%'
  }
}));
var _default = Maps;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,