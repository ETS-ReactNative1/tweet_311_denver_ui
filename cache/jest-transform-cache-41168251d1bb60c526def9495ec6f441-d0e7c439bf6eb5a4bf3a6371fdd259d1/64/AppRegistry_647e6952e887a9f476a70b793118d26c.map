{"version":3,"sources":["AppRegistry.js"],"names":["BatchedBridge","require","BugReporting","ReactNative","SceneTracker","infoLog","invariant","renderApplication","createPerformanceLogger","runnables","runCount","sections","taskProviders","Map","taskCancelProviders","componentProviderInstrumentationHook","component","wrapperComponentProvider","showFabricIndicator","AppRegistry","setWrapperComponentProvider","provider","enableFabricIndicator","enabled","registerConfig","config","forEach","appConfig","run","registerRunnable","appKey","registerComponent","section","componentProvider","scopedPerformanceLogger","appParameters","initialProps","rootTag","fabric","registerSection","getAppKeys","Object","keys","getSectionKeys","getSections","getRunnable","getRegistry","setComponentProviderInstrumentationHook","hook","runApplication","msg","JSON","stringify","addSource","setActiveScene","name","unmountApplicationComponentAtRootTag","unmountComponentAtNodeAndRemoveContainer","registerHeadlessTask","taskKey","taskProvider","registerCancellableHeadlessTask","taskCancelProvider","has","console","warn","set","startHeadlessTask","taskId","data","get","NativeHeadlessJsTaskSupport","notifyTaskFinished","then","catch","reason","error","HeadlessJsTaskError","notifyTaskRetry","retryPosted","cancelHeadlessTask","Error","registerCallableModule","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\nconst BugReporting = require('../BugReporting/BugReporting');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst SceneTracker = require('../Utilities/SceneTracker');\n\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\nconst renderApplication = require('./renderApplication');\nconst createPerformanceLogger = require('../Utilities/createPerformanceLogger');\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nimport NativeHeadlessJsTaskSupport from './NativeHeadlessJsTaskSupport';\nimport HeadlessJsTaskError from './HeadlessJsTaskError';\n\ntype Task = (taskData: any) => Promise<void>;\ntype TaskProvider = () => Task;\ntype TaskCanceller = () => void;\ntype TaskCancelProvider = () => TaskCanceller;\n\nexport type ComponentProvider = () => React$ComponentType<any>;\nexport type ComponentProviderInstrumentationHook = (\n  component: ComponentProvider,\n  scopedPerformanceLogger: IPerformanceLogger,\n) => React$ComponentType<any>;\nexport type AppConfig = {\n  appKey: string,\n  component?: ComponentProvider,\n  run?: Function,\n  section?: boolean,\n};\nexport type Runnable = {\n  component?: ComponentProvider,\n  run: Function,\n};\nexport type Runnables = {\n  [appKey: string]: Runnable,\n};\nexport type Registry = {\n  sections: Array<string>,\n  runnables: Runnables,\n};\nexport type WrapperComponentProvider = any => React$ComponentType<*>;\n\nconst runnables: Runnables = {};\nlet runCount = 1;\nconst sections: Runnables = {};\nconst taskProviders: Map<string, TaskProvider> = new Map();\nconst taskCancelProviders: Map<string, TaskCancelProvider> = new Map();\nlet componentProviderInstrumentationHook: ComponentProviderInstrumentationHook = (\n  component: ComponentProvider,\n) => component();\n\nlet wrapperComponentProvider: ?WrapperComponentProvider;\nlet showFabricIndicator = false;\n\n/**\n * `AppRegistry` is the JavaScript entry point to running all React Native apps.\n *\n * See http://facebook.github.io/react-native/docs/appregistry.html\n */\nconst AppRegistry = {\n  setWrapperComponentProvider(provider: WrapperComponentProvider) {\n    wrapperComponentProvider = provider;\n  },\n\n  enableFabricIndicator(enabled: boolean): void {\n    showFabricIndicator = enabled;\n  },\n\n  registerConfig(config: Array<AppConfig>): void {\n    config.forEach(appConfig => {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(\n          appConfig.component != null,\n          'AppRegistry.registerConfig(...): Every config is expected to set ' +\n            'either `run` or `component`, but `%s` has neither.',\n          appConfig.appKey,\n        );\n        AppRegistry.registerComponent(\n          appConfig.appKey,\n          appConfig.component,\n          appConfig.section,\n        );\n      }\n    });\n  },\n\n  /**\n   * Registers an app's root component.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#registercomponent\n   */\n  registerComponent(\n    appKey: string,\n    componentProvider: ComponentProvider,\n    section?: boolean,\n  ): string {\n    let scopedPerformanceLogger = createPerformanceLogger();\n    runnables[appKey] = {\n      componentProvider,\n      run: appParameters => {\n        renderApplication(\n          componentProviderInstrumentationHook(\n            componentProvider,\n            scopedPerformanceLogger,\n          ),\n          appParameters.initialProps,\n          appParameters.rootTag,\n          wrapperComponentProvider && wrapperComponentProvider(appParameters),\n          appParameters.fabric,\n          showFabricIndicator,\n          scopedPerformanceLogger,\n        );\n      },\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n\n  registerRunnable(appKey: string, run: Function): string {\n    runnables[appKey] = {run};\n    return appKey;\n  },\n\n  registerSection(appKey: string, component: ComponentProvider): void {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n\n  getAppKeys(): Array<string> {\n    return Object.keys(runnables);\n  },\n\n  getSectionKeys(): Array<string> {\n    return Object.keys(sections);\n  },\n\n  getSections(): Runnables {\n    return {\n      ...sections,\n    };\n  },\n\n  getRunnable(appKey: string): ?Runnable {\n    return runnables[appKey];\n  },\n\n  getRegistry(): Registry {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: {...runnables},\n    };\n  },\n\n  setComponentProviderInstrumentationHook(\n    hook: ComponentProviderInstrumentationHook,\n  ) {\n    componentProviderInstrumentationHook = hook;\n  },\n\n  /**\n   * Loads the JavaScript bundle and runs the app.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#runapplication\n   */\n  runApplication(appKey: string, appParameters: any): void {\n    const msg =\n      'Running \"' + appKey + '\" with ' + JSON.stringify(appParameters);\n    infoLog(msg);\n    BugReporting.addSource(\n      'AppRegistry.runApplication' + runCount++,\n      () => msg,\n    );\n    invariant(\n      runnables[appKey] && runnables[appKey].run,\n      `\"${appKey}\" has not been registered. This can happen if:\\n` +\n        '* Metro (the local dev server) is run from the wrong folder. ' +\n        'Check if Metro is running, stop it and restart it in the current project.\\n' +\n        \"* A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\",\n    );\n\n    SceneTracker.setActiveScene({name: appKey});\n    runnables[appKey].run(appParameters);\n  },\n\n  /**\n   * Stops an application when a view should be destroyed.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#unmountapplicationcomponentatroottag\n   */\n  unmountApplicationComponentAtRootTag(rootTag: number): void {\n    ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n\n  /**\n   * Register a headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#registerheadlesstask\n   */\n  registerHeadlessTask(taskKey: string, taskProvider: TaskProvider): void {\n    this.registerCancellableHeadlessTask(taskKey, taskProvider, () => () => {\n      /* Cancel is no-op */\n    });\n  },\n\n  /**\n   * Register a cancellable headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#registercancellableheadlesstask\n   */\n  registerCancellableHeadlessTask(\n    taskKey: string,\n    taskProvider: TaskProvider,\n    taskCancelProvider: TaskCancelProvider,\n  ): void {\n    if (taskProviders.has(taskKey)) {\n      console.warn(\n        `registerHeadlessTask or registerCancellableHeadlessTask called multiple times for same key '${taskKey}'`,\n      );\n    }\n    taskProviders.set(taskKey, taskProvider);\n    taskCancelProviders.set(taskKey, taskCancelProvider);\n  },\n\n  /**\n   * Only called from native code. Starts a headless task.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#startheadlesstask\n   */\n  startHeadlessTask(taskId: number, taskKey: string, data: any): void {\n    const taskProvider = taskProviders.get(taskKey);\n    if (!taskProvider) {\n      console.warn(`No task registered for key ${taskKey}`);\n      if (NativeHeadlessJsTaskSupport) {\n        NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      }\n      return;\n    }\n    taskProvider()(data)\n      .then(() => {\n        if (NativeHeadlessJsTaskSupport) {\n          NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n        }\n      })\n      .catch(reason => {\n        console.error(reason);\n\n        if (\n          NativeHeadlessJsTaskSupport &&\n          reason instanceof HeadlessJsTaskError\n        ) {\n          NativeHeadlessJsTaskSupport.notifyTaskRetry(taskId).then(\n            retryPosted => {\n              if (!retryPosted) {\n                NativeHeadlessJsTaskSupport.notifyTaskFinished(taskId);\n              }\n            },\n          );\n        }\n      });\n  },\n\n  /**\n   * Only called from native code. Cancels a headless task.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#cancelheadlesstask\n   */\n  cancelHeadlessTask(taskId: number, taskKey: string): void {\n    const taskCancelProvider = taskCancelProviders.get(taskKey);\n    if (!taskCancelProvider) {\n      throw new Error(`No task canceller registered for key '${taskKey}'`);\n    }\n    taskCancelProvider()();\n  },\n};\n\nBatchedBridge.registerCallableModule('AppRegistry', AppRegistry);\n\nmodule.exports = AppRegistry;\n"]}