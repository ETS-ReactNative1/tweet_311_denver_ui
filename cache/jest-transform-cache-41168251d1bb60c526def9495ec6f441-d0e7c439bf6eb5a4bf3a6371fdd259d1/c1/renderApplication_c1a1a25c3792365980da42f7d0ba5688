1a689ae438113e53a90eea9ab72a2e81
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _GlobalPerformanceLogger = _interopRequireDefault(require("../Utilities/GlobalPerformanceLogger"));

var _PerformanceLoggerContext = _interopRequireDefault(require("../Utilities/PerformanceLoggerContext"));

var AppContainer = require("./AppContainer");

var React = require('react');

var ReactFabricIndicator = require("./ReactFabricIndicator");

var invariant = require('invariant');

require("../Utilities/BackHandler");

function renderApplication(RootComponent, initialProps, rootTag, WrapperComponent, fabric, showFabricIndicator, scopedPerformanceLogger) {
  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);
  var renderable = React.createElement(_PerformanceLoggerContext.default.Provider, {
    value: scopedPerformanceLogger != null ? scopedPerformanceLogger : _GlobalPerformanceLogger.default
  }, React.createElement(AppContainer, {
    rootTag: rootTag,
    WrapperComponent: WrapperComponent
  }, React.createElement(RootComponent, (0, _extends2.default)({}, initialProps, {
    rootTag: rootTag
  })), fabric === true && showFabricIndicator === true ? React.createElement(ReactFabricIndicator, null) : null));

  _GlobalPerformanceLogger.default.startTimespan('renderApplication_React_render');

  if (fabric) {
    require("../Renderer/shims/ReactFabric").render(renderable, rootTag);
  } else {
    require("../Renderer/shims/ReactNative").render(renderable, rootTag);
  }

  _GlobalPerformanceLogger.default.stopTimespan('renderApplication_React_render');
}

module.exports = renderApplication;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbmRlckFwcGxpY2F0aW9uLmpzIl0sIm5hbWVzIjpbIkFwcENvbnRhaW5lciIsInJlcXVpcmUiLCJSZWFjdCIsIlJlYWN0RmFicmljSW5kaWNhdG9yIiwiaW52YXJpYW50IiwicmVuZGVyQXBwbGljYXRpb24iLCJSb290Q29tcG9uZW50IiwiaW5pdGlhbFByb3BzIiwicm9vdFRhZyIsIldyYXBwZXJDb21wb25lbnQiLCJmYWJyaWMiLCJzaG93RmFicmljSW5kaWNhdG9yIiwic2NvcGVkUGVyZm9ybWFuY2VMb2dnZXIiLCJyZW5kZXJhYmxlIiwiR2xvYmFsUGVyZm9ybWFuY2VMb2dnZXIiLCJzdGFydFRpbWVzcGFuIiwicmVuZGVyIiwic3RvcFRpbWVzcGFuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBVUE7Ozs7OztBQUdBOztBQUVBOztBQUhBLElBQU1BLFlBQVksR0FBR0MsT0FBTyxrQkFBNUI7O0FBSUEsSUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNRSxvQkFBb0IsR0FBR0YsT0FBTywwQkFBcEM7O0FBRUEsSUFBTUcsU0FBUyxHQUFHSCxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFHQUEsT0FBTyw0QkFBUDs7QUFFQSxTQUFTSSxpQkFBVCxDQUNFQyxhQURGLEVBRUVDLFlBRkYsRUFHRUMsT0FIRixFQUlFQyxnQkFKRixFQUtFQyxNQUxGLEVBTUVDLG1CQU5GLEVBT0VDLHVCQVBGLEVBUUU7QUFDQVIsRUFBQUEsU0FBUyxDQUFDSSxPQUFELEVBQVUsOENBQVYsRUFBMERBLE9BQTFELENBQVQ7QUFFQSxNQUFNSyxVQUFVLEdBQ2Qsb0JBQUMsaUNBQUQsQ0FBMEIsUUFBMUI7QUFDRSxJQUFBLEtBQUssRUFBRUQsdUJBQUYsV0FBRUEsdUJBQUYsR0FBNkJFO0FBRHBDLEtBRUUsb0JBQUMsWUFBRDtBQUFjLElBQUEsT0FBTyxFQUFFTixPQUF2QjtBQUFnQyxJQUFBLGdCQUFnQixFQUFFQztBQUFsRCxLQUNFLG9CQUFDLGFBQUQsNkJBQW1CRixZQUFuQjtBQUFpQyxJQUFBLE9BQU8sRUFBRUM7QUFBMUMsS0FERixFQUVHRSxNQUFNLEtBQUssSUFBWCxJQUFtQkMsbUJBQW1CLEtBQUssSUFBM0MsR0FDQyxvQkFBQyxvQkFBRCxPQURELEdBRUcsSUFKTixDQUZGLENBREY7O0FBWUFHLG1DQUF3QkMsYUFBeEIsQ0FBc0MsZ0NBQXRDOztBQUNBLE1BQUlMLE1BQUosRUFBWTtBQUNWVCxJQUFBQSxPQUFPLGlDQUFQLENBQXlDZSxNQUF6QyxDQUFnREgsVUFBaEQsRUFBNERMLE9BQTVEO0FBQ0QsR0FGRCxNQUVPO0FBQ0xQLElBQUFBLE9BQU8saUNBQVAsQ0FBeUNlLE1BQXpDLENBQWdESCxVQUFoRCxFQUE0REwsT0FBNUQ7QUFDRDs7QUFDRE0sbUNBQXdCRyxZQUF4QixDQUFxQyxnQ0FBckM7QUFDRDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCZCxpQkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBBcHBDb250YWluZXIgPSByZXF1aXJlKCcuL0FwcENvbnRhaW5lcicpO1xuaW1wb3J0IEdsb2JhbFBlcmZvcm1hbmNlTG9nZ2VyIGZyb20gJy4uL1V0aWxpdGllcy9HbG9iYWxQZXJmb3JtYW5jZUxvZ2dlcic7XG5pbXBvcnQgdHlwZSB7SVBlcmZvcm1hbmNlTG9nZ2VyfSBmcm9tICcuLi9VdGlsaXRpZXMvY3JlYXRlUGVyZm9ybWFuY2VMb2dnZXInO1xuaW1wb3J0IFBlcmZvcm1hbmNlTG9nZ2VyQ29udGV4dCBmcm9tICcuLi9VdGlsaXRpZXMvUGVyZm9ybWFuY2VMb2dnZXJDb250ZXh0JztcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IFJlYWN0RmFicmljSW5kaWNhdG9yID0gcmVxdWlyZSgnLi9SZWFjdEZhYnJpY0luZGljYXRvcicpO1xuXG5jb25zdCBpbnZhcmlhbnQgPSByZXF1aXJlKCdpbnZhcmlhbnQnKTtcblxuLy8gcmVxdWlyZSBCYWNrSGFuZGxlciBzbyBpdCBzZXRzIHRoZSBkZWZhdWx0IGhhbmRsZXIgdGhhdCBleGl0cyB0aGUgYXBwIGlmIG5vIGxpc3RlbmVycyByZXNwb25kXG5yZXF1aXJlKCcuLi9VdGlsaXRpZXMvQmFja0hhbmRsZXInKTtcblxuZnVuY3Rpb24gcmVuZGVyQXBwbGljYXRpb248UHJvcHM6IE9iamVjdD4oXG4gIFJvb3RDb21wb25lbnQ6IFJlYWN0LkNvbXBvbmVudFR5cGU8UHJvcHM+LFxuICBpbml0aWFsUHJvcHM6IFByb3BzLFxuICByb290VGFnOiBhbnksXG4gIFdyYXBwZXJDb21wb25lbnQ/OiA/UmVhY3QuQ29tcG9uZW50VHlwZTwqPixcbiAgZmFicmljPzogYm9vbGVhbixcbiAgc2hvd0ZhYnJpY0luZGljYXRvcj86IGJvb2xlYW4sXG4gIHNjb3BlZFBlcmZvcm1hbmNlTG9nZ2VyPzogSVBlcmZvcm1hbmNlTG9nZ2VyLFxuKSB7XG4gIGludmFyaWFudChyb290VGFnLCAnRXhwZWN0IHRvIGhhdmUgYSB2YWxpZCByb290VGFnLCBpbnN0ZWFkIGdvdCAnLCByb290VGFnKTtcblxuICBjb25zdCByZW5kZXJhYmxlID0gKFxuICAgIDxQZXJmb3JtYW5jZUxvZ2dlckNvbnRleHQuUHJvdmlkZXJcbiAgICAgIHZhbHVlPXtzY29wZWRQZXJmb3JtYW5jZUxvZ2dlciA/PyBHbG9iYWxQZXJmb3JtYW5jZUxvZ2dlcn0+XG4gICAgICA8QXBwQ29udGFpbmVyIHJvb3RUYWc9e3Jvb3RUYWd9IFdyYXBwZXJDb21wb25lbnQ9e1dyYXBwZXJDb21wb25lbnR9PlxuICAgICAgICA8Um9vdENvbXBvbmVudCB7Li4uaW5pdGlhbFByb3BzfSByb290VGFnPXtyb290VGFnfSAvPlxuICAgICAgICB7ZmFicmljID09PSB0cnVlICYmIHNob3dGYWJyaWNJbmRpY2F0b3IgPT09IHRydWUgPyAoXG4gICAgICAgICAgPFJlYWN0RmFicmljSW5kaWNhdG9yIC8+XG4gICAgICAgICkgOiBudWxsfVxuICAgICAgPC9BcHBDb250YWluZXI+XG4gICAgPC9QZXJmb3JtYW5jZUxvZ2dlckNvbnRleHQuUHJvdmlkZXI+XG4gICk7XG5cbiAgR2xvYmFsUGVyZm9ybWFuY2VMb2dnZXIuc3RhcnRUaW1lc3BhbigncmVuZGVyQXBwbGljYXRpb25fUmVhY3RfcmVuZGVyJyk7XG4gIGlmIChmYWJyaWMpIHtcbiAgICByZXF1aXJlKCcuLi9SZW5kZXJlci9zaGltcy9SZWFjdEZhYnJpYycpLnJlbmRlcihyZW5kZXJhYmxlLCByb290VGFnKTtcbiAgfSBlbHNlIHtcbiAgICByZXF1aXJlKCcuLi9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZScpLnJlbmRlcihyZW5kZXJhYmxlLCByb290VGFnKTtcbiAgfVxuICBHbG9iYWxQZXJmb3JtYW5jZUxvZ2dlci5zdG9wVGltZXNwYW4oJ3JlbmRlckFwcGxpY2F0aW9uX1JlYWN0X3JlbmRlcicpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJlbmRlckFwcGxpY2F0aW9uO1xuIl19