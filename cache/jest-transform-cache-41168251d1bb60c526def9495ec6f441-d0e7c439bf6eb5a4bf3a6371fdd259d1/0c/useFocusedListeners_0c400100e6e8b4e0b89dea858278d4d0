7af28b7655ca35b13bf33837c72fc432
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useFocusedListeners;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useFocusedListeners() {
  var _React$useRef = React.useRef([]),
      listeners = _React$useRef.current;

  var addListener = React.useCallback(function (listener) {
    listeners.push(listener);
    return function () {
      var index = listeners.indexOf(listener);
      listeners.splice(index, 1);
    };
  }, [listeners]);
  return {
    listeners: listeners,
    addListener: addListener
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZUZvY3VzZWRMaXN0ZW5lcnMudHN4Il0sIm5hbWVzIjpbImN1cnJlbnQiLCJsaXN0ZW5lcnMiLCJSZWFjdCIsImFkZExpc3RlbmVyIiwibGlzdGVuZXIiLCJpbmRleCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUEsS0FBQSxHQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNZSxTQUFBLG1CQUFBLEdBQStCO0FBQUEsc0JBQ2JFLEtBQUssQ0FBTEEsTUFBQUEsQ0FBL0IsRUFBK0JBLENBRGE7QUFBQSxNQUMzQkQsU0FEMkIsaUJBQ3BDRCxPQURvQzs7QUFHNUMsTUFBTUcsV0FBVyxHQUFHLEtBQUssQ0FBTCxXQUFBLENBQ2pCQyxVQUFBQSxRQUFELEVBQXlDO0FBQ3ZDSCxJQUFBQSxTQUFTLENBQVRBLElBQUFBLENBQUFBLFFBQUFBO0FBRUEsV0FBTyxZQUFNO0FBQ1gsVUFBTUksS0FBSyxHQUFHSixTQUFTLENBQVRBLE9BQUFBLENBQWQsUUFBY0EsQ0FBZDtBQUVBQSxNQUFBQSxTQUFTLENBQVRBLE1BQUFBLENBQUFBLEtBQUFBLEVBQUFBLENBQUFBO0FBSEYsS0FBQTtBQUpnQixHQUFBLEVBVWxCLENBVkYsU0FVRSxDQVZrQixDQUFwQjtBQWFBLFNBQU87QUFDTEEsSUFBQUEsU0FESyxFQUNMQSxTQURLO0FBRUxFLElBQUFBLFdBQUFBLEVBQUFBO0FBRkssR0FBUDtBQUlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRm9jdXNlZE5hdmlnYXRpb25MaXN0ZW5lciB9IGZyb20gJy4vTmF2aWdhdGlvbkJ1aWxkZXJDb250ZXh0JztcblxuLyoqXG4gKiBIb29rIHdoaWNoIGxldHMgY2hpbGQgbmF2aWdhdG9ycyBhZGQgbGlzdGVuZXJzIHRvIGJlIGNhbGxlZCBmb3IgZm9jdXNlZCBuYXZpZ2F0b3JzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VGb2N1c2VkTGlzdGVuZXJzKCkge1xuICBjb25zdCB7IGN1cnJlbnQ6IGxpc3RlbmVycyB9ID0gUmVhY3QudXNlUmVmPEZvY3VzZWROYXZpZ2F0aW9uTGlzdGVuZXJbXT4oW10pO1xuXG4gIGNvbnN0IGFkZExpc3RlbmVyID0gUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgKGxpc3RlbmVyOiBGb2N1c2VkTmF2aWdhdGlvbkxpc3RlbmVyKSA9PiB7XG4gICAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG5cbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gbGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpO1xuXG4gICAgICAgIGxpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgfTtcbiAgICB9LFxuICAgIFtsaXN0ZW5lcnNdXG4gICk7XG5cbiAgcmV0dXJuIHtcbiAgICBsaXN0ZW5lcnMsXG4gICAgYWRkTGlzdGVuZXIsXG4gIH07XG59XG4iXX0=