{"version":3,"sources":["CardContainer.tsx"],"names":["EPSILON","transitionSpec","React","onPageChangeConfirm","handleOpen","onTransitionEnd","route","scene","onOpenRoute","handleClose","onCloseRoute","handleTransitionStart","closing","active","onPageChangeCancel","onTransitionStart","insets","top","right","bottom","left","safeAreaInsetLeft","colors","listener","value","setPointerEvents","focused","headerShown","marginTop","headerHeight","backgroundColor","background","StyleSheet","absoluteFill","styles","container","renderScene","renderHeader","mode","layout","scenes","getPreviousRoute","getFocusedRoute","gestureDirection","styleInterpolator","onContentHeightChange","onHeaderHeightChange","flex","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { Route, useTheme } from '@react-navigation/native';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\nimport HeaderHeightContext from '../../utils/HeaderHeightContext';\nimport { Scene, Layout, StackHeaderMode, TransitionPreset } from '../../types';\n\ntype Props = TransitionPreset & {\n  index: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  previousScene?: Scene<Route<string>>;\n  scene: Scene<Route<string>>;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  cardOverlayEnabled?: boolean;\n  cardShadowEnabled?: boolean;\n  cardStyle?: StyleProp<ViewStyle>;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getFocusedRoute: () => Route<string>;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart?: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd?: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n  gestureEnabled?: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact?: number;\n  headerMode: StackHeaderMode;\n  headerShown?: boolean;\n  headerTransparent?: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n};\n\nconst EPSILON = 0.1;\n\nfunction CardContainer({\n  active,\n  cardOverlayEnabled,\n  cardShadowEnabled,\n  cardStyle,\n  cardStyleInterpolator,\n  closing,\n  gesture,\n  focused,\n  gestureDirection,\n  gestureEnabled,\n  gestureResponseDistance,\n  gestureVelocityImpact,\n  getPreviousRoute,\n  getFocusedRoute,\n  headerMode,\n  headerShown,\n  headerStyleInterpolator,\n  headerTransparent,\n  headerHeight,\n  onHeaderHeightChange,\n  index,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onPageChangeCancel,\n  onPageChangeConfirm,\n  onPageChangeStart,\n  onTransitionEnd,\n  onTransitionStart,\n  previousScene,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n  transitionSpec,\n}: Props) {\n  React.useEffect(() => {\n    onPageChangeConfirm?.();\n  }, [active, onPageChangeConfirm]);\n\n  const handleOpen = () => {\n    onTransitionEnd?.({ route: scene.route }, false);\n    onOpenRoute({ route: scene.route });\n  };\n\n  const handleClose = () => {\n    onTransitionEnd?.({ route: scene.route }, true);\n    onCloseRoute({ route: scene.route });\n  };\n\n  const handleTransitionStart = ({ closing }: { closing: boolean }) => {\n    if (active && closing) {\n      onPageChangeConfirm?.();\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route: scene.route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  const [pointerEvents, setPointerEvents] = React.useState<'box-none' | 'none'>(\n    'box-none'\n  );\n\n  React.useEffect(() => {\n    // `addListener` may not exist on web and older versions of React Native\n    // @ts-ignore\n    const listener = scene.progress.next?.addListener?.(\n      ({ value }: { value: number }) => {\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n      }\n    );\n\n    return () => {\n      if (listener) {\n        // @ts-ignore\n        scene.progress.next?.removeListener?.(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n\n  return (\n    <Card\n      index={index}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransitionStart={handleTransitionStart}\n      onGestureBegin={onPageChangeStart}\n      onGestureCanceled={onPageChangeCancel}\n      gestureEnabled={gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents={active ? 'box-none' : pointerEvents}\n      containerStyle={\n        headerMode === 'float' && !headerTransparent && headerShown !== false\n          ? { marginTop: headerHeight }\n          : null\n      }\n      contentStyle={[{ backgroundColor: colors.background }, cardStyle]}\n      style={StyleSheet.absoluteFill}\n    >\n      <View style={styles.container}>\n        <View style={styles.scene}>\n          <HeaderHeightContext.Provider value={headerHeight}>\n            {renderScene({ route: scene.route })}\n          </HeaderHeightContext.Provider>\n        </View>\n        {headerMode === 'screen'\n          ? renderHeader({\n              mode: 'screen',\n              layout,\n              insets,\n              scenes: [previousScene, scene],\n              getPreviousRoute,\n              getFocusedRoute,\n              gestureDirection,\n              styleInterpolator: headerStyleInterpolator,\n              onContentHeightChange: onHeaderHeightChange,\n            })\n          : null}\n      </View>\n    </Card>\n  );\n}\n\nexport default React.memo(CardContainer);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"]}